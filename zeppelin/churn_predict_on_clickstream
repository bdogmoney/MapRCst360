{"paragraphs":[{"text":"%md \n### Procedure\n1. Read clickstream data from MapR Streams\n2. Output performance data for web traffic using Spark SQL\n3. Combine Clickstream with Master CRM data using the Spark connector to MapR-DB\n4. Predict churn risk users in the clickstream with Spark ML.\n\n### Usage:\n* Click the Start button then run all paragraphs.\n* Approximate runtime is 5-10 minutes.\n<br><br>","user":"anonymous","dateUpdated":"2017-09-20T10:05:21-0700","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Procedure</h3>\n<ol>\n  <li>Read clickstream data from MapR Streams</li>\n  <li>Output performance data for web traffic using Spark SQL</li>\n  <li>Combine Clickstream with Master CRM data using the Spark connector to MapR-DB</li>\n  <li>Predict churn risk users in the clickstream with Spark ML.</li>\n</ol>\n<h3>Usage:</h3>\n<ul>\n  <li>Click the Start button then run all paragraphs.</li>\n  <li>Approximate runtime is 5-10 minutes.<br/><br><br></li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1505405945772_-740388268","id":"20170914-091905_162396471","dateCreated":"2017-09-14T09:19:05-0700","dateStarted":"2017-09-20T10:05:21-0700","dateFinished":"2017-09-20T10:05:21-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6188"},{"text":"%angular\n<br>\n<div>\n<img src=\"http://nodea:7221/stream_sql_animation.gif\" width=80%>\n<form class=\"form-inline\">\n  <div style=\"height:39px; width:70px\" class=\"form-group\">\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"z.runParagraph('20170918-124236_1482043397'); z.runParagraph('20170918-130256_2000880502');\">Start</button>\n    </div>\n</form>\n</div>","user":"anonymous","dateUpdated":"2017-09-20T10:26:25-0700","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/undefined","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<br>\n<div>\n<img src=\"http://nodea:7221/stream_sql_animation.gif\" width=80%>\n<form class=\"form-inline\">\n  <div style=\"height:39px; width:70px\" class=\"form-group\">\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"z.runParagraph('20170918-124236_1482043397'); z.runParagraph('20170918-130256_2000880502');\">Start</button>\n    </div>\n</form>\n</div>"}]},"apps":[],"jobName":"paragraph_1505763740946_-1911069004","id":"20170918-124220_1469671227","dateCreated":"2017-09-18T12:42:20-0700","dateStarted":"2017-09-20T10:05:08-0700","dateFinished":"2017-09-20T10:05:08-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6189"},{"text":"%angular\n\n<div id=\"container\" style=\"height:275px; width: 90%\"></div>\n<script type=\"text/javascript\">\n\nvar chart; // global\n\n/**\n * Request data from the server, add it to the graph and set a timeout \n * to request again\n */\nfunction requestData() {\n    $.ajax({\n        url: 'data360.html',\n        success: function(point) {\n            var series = chart.series[0],\n                shift = series.data.length > 20; // shift if the series is \n                                                 // longer than 20\n                \n\n            // add the point\n            chart.series[0].addPoint(point, true, shift);\n            \n            // call it again after one second\n            setTimeout(requestData, 1000);    \n        },\n        cache: false\n    });\n}\n\nfunction plotChart() {\n    chart = new Highcharts.Chart({\n        chart: {\n            renderTo: 'container',\n            //defaultSeriesType: 'line',\n            events: {\n                load: requestData\n            }\n        },\n        credits: { \n            enabled: false\n        },\n        title: {\n            text: 'Clickstream Throughput'\n        },\n        xAxis: {\n            type: 'datetime',\n            //tickPixelInterval: 150,\n            //maxZoom: 20 * 1000\n        },\n        yAxis: {\n            minPadding: 0.2,\n            maxPadding: 0.2,\n            title: {\n                text: 'Web Requests / Sec',\n                margin: 80\n            }\n        },\n        plotOptions: {\n            area: {\n                fillColor: {\n                    linearGradient: {\n                        x1: 0,\n                        y1: 0,\n                        x2: 0,\n                        y2: 1\n                    },\n                    stops: [\n                        [0, Highcharts.getOptions().colors[0]],\n                        [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\n                    ]\n                },\n                marker: {\n                    radius: 2\n                },\n                lineWidth: 1,\n                states: {\n                    hover: {\n                        lineWidth: 1\n                    }\n                },\n                threshold: null\n            }\n        },\n        series: [{\n            type: 'area',\n            name: 'Time',\n            data: []\n        }]\n    });        \n}\n\nfunction loadLib(url) {\n    console.log('Loading library at: ' + url);\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.onload = function() { console.log('Loaded library at: ' + url); }\n    script.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n// Load each script only once!\nif (!window.jQuery) {\n    loadLib(\"http://code.jquery.com/jquery-1.8.2.min.js\");\n}\nif (!window.Highcharts) {\n    loadLib(\"http://code.highcharts.com/highcharts.js\");\n    loadLib(\"http://code.highcharts.com/modules/exporting.js\");\n    loadLib(\"http://code.highcharts.com/highcharts-more.js\");\n}\nplotChart();\n\n</script>\n","user":"anonymous","dateUpdated":"2017-09-20T10:26:39-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/undefined","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"container\" style=\"height:275px; width: 90%\"></div>\n<script type=\"text/javascript\">\n\nvar chart; // global\n\n/**\n * Request data from the server, add it to the graph and set a timeout \n * to request again\n */\nfunction requestData() {\n    $.ajax({\n        url: 'data360.html',\n        success: function(point) {\n            var series = chart.series[0],\n                shift = series.data.length > 20; // shift if the series is \n                                                 // longer than 20\n                \n\n            // add the point\n            chart.series[0].addPoint(point, true, shift);\n            \n            // call it again after one second\n            setTimeout(requestData, 1000);    \n        },\n        cache: false\n    });\n}\n\nfunction plotChart() {\n    chart = new Highcharts.Chart({\n        chart: {\n            renderTo: 'container',\n            //defaultSeriesType: 'line',\n            events: {\n                load: requestData\n            }\n        },\n        credits: { \n            enabled: false\n        },\n        title: {\n            text: 'Clickstream Throughput'\n        },\n        xAxis: {\n            type: 'datetime',\n            //tickPixelInterval: 150,\n            //maxZoom: 20 * 1000\n        },\n        yAxis: {\n            minPadding: 0.2,\n            maxPadding: 0.2,\n            title: {\n                text: 'Web Requests / Sec',\n                margin: 80\n            }\n        },\n        plotOptions: {\n            area: {\n                fillColor: {\n                    linearGradient: {\n                        x1: 0,\n                        y1: 0,\n                        x2: 0,\n                        y2: 1\n                    },\n                    stops: [\n                        [0, Highcharts.getOptions().colors[0]],\n                        [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\n                    ]\n                },\n                marker: {\n                    radius: 2\n                },\n                lineWidth: 1,\n                states: {\n                    hover: {\n                        lineWidth: 1\n                    }\n                },\n                threshold: null\n            }\n        },\n        series: [{\n            type: 'area',\n            name: 'Time',\n            data: []\n        }]\n    });        \n}\n\nfunction loadLib(url) {\n    console.log('Loading library at: ' + url);\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.onload = function() { console.log('Loaded library at: ' + url); }\n    script.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n// Load each script only once!\nif (!window.jQuery) {\n    loadLib(\"http://code.jquery.com/jquery-1.8.2.min.js\");\n}\nif (!window.Highcharts) {\n    loadLib(\"http://code.highcharts.com/highcharts.js\");\n    loadLib(\"http://code.highcharts.com/modules/exporting.js\");\n    loadLib(\"http://code.highcharts.com/highcharts-more.js\");\n}\nplotChart();\n\n</script>"}]},"apps":[],"jobName":"paragraph_1505763756732_505184737","id":"20170918-124236_1482043397","dateCreated":"2017-09-18T12:42:36-0700","dateStarted":"2017-09-20T10:05:36-0700","dateFinished":"2017-09-20T10:05:36-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6190"},{"title":"Click start to begin, then run the subsequent paragraphs.","text":"%sh \nmaprcli stream delete -path /tmp/clickstream\nmaprcli stream create -path /tmp/clickstream -produceperm p -consumeperm p -topicperm p\n/home/mapr/start_360_demo.sh","user":"anonymous","dateUpdated":"2017-09-20T10:26:59-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false},"editorMode":"ace/mode/sh","editorHide":true,"tableHide":false,"title":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: commands will be executed using /bin/sh\njob 46 at Wed Sep 20 10:05:00 2017\n"},{"type":"HTML","data":"Producer started: <font color='green'> PID 20958 </font><br>\n"}]},"apps":[],"jobName":"paragraph_1505764976855_-249949827","id":"20170918-130256_2000880502","dateCreated":"2017-09-18T13:02:56-0700","dateStarted":"2017-09-20T10:05:31-0700","dateFinished":"2017-09-20T10:05:35-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6191"},{"title":"Import functions for Spark Streaming","text":"import org.apache.kafka.clients.consumer.ConsumerConfig\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql._\nimport org.apache.spark.streaming.{ Seconds, StreamingContext, Time , Minutes}\nimport org.apache.spark.streaming.{ Seconds, StreamingContext, Time }\nimport org.apache.spark.streaming.kafka09.{ ConsumerStrategies, KafkaUtils, LocationStrategies }\n","user":"anonymous","dateUpdated":"2017-09-19T10:48:59-0700","config":{"editorMode":"ace/mode/scala","colWidth":12,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"},"tableHide":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.kafka.clients.consumer.ConsumerConfig\n\nimport org.apache.spark.SparkConf\n\nimport org.apache.spark.rdd.RDD\n\nimport org.apache.spark.sql.SparkSession\n\nimport org.apache.spark.sql.types._\n\nimport org.apache.spark.sql.functions._\n\nimport org.apache.spark.sql._\n\nimport org.apache.spark.streaming.{Seconds, StreamingContext, Time, Minutes}\n\nimport org.apache.spark.streaming.{Seconds, StreamingContext, Time}\n\nimport org.apache.spark.streaming.kafka09.{ConsumerStrategies, KafkaUtils, LocationStrategies}\n"}]},"apps":[],"jobName":"paragraph_1505337712546_-1283099519","id":"20161031-134722_1383009903","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-19T10:48:59-0700","dateFinished":"2017-09-19T10:49:40-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6192"},{"title":"Programmatically define a schema for the clickstream","text":"case class Click(user_id: Integer, datetime: String, os: String, browser: String, response_time_ms: String, product: String, url: String) extends Serializable\nval schema = StructType(Array(\n      StructField(\"user_id\", IntegerType, true),\n      StructField(\"datetime\", TimestampType, true),\n      StructField(\"os\", StringType, true),\n      StructField(\"browser\", StringType, true),\n      StructField(\"response_time_ms\", StringType, true),\n      StructField(\"product\", StringType, true),\n      StructField(\"url\", StringType, true)\n    ))","user":"anonymous","dateUpdated":"2017-09-19T10:49:01-0700","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"},"tableHide":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndefined class Click\n\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(user_id,IntegerType,true), StructField(datetime,TimestampType,true), StructField(os,StringType,true), StructField(browser,StringType,true), StructField(response_time_ms,StringType,true), StructField(product,StringType,true), StructField(url,StringType,true))\n"}]},"apps":[],"jobName":"paragraph_1505337712547_-1283484268","id":"20161031-135357_293992216","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-19T10:49:01-0700","dateFinished":"2017-09-19T10:49:41-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6193"},{"title":"Define how to consume and save the clickstream","text":"val groupId = \"clickstream_reader\"\nval offsetReset = \"earliest\"\nval pollTimeout = \"5000\"\nval Array(topicc) = Array(\"/tmp/clickstream:weblog\")\nval brokers = \"kafkabroker.example.com:9092\" // not needed for MapR Streams, needed for Kafka\n\n//val sparkConf = new SparkConf().setAppName(SparkKafkaConsumer.getClass.getName)\n\nval ssc = new StreamingContext(sc, Seconds(2))\n\nval topicsSet = topicc.split(\",\").toSet\n\n    val kafkaParams = Map[String, String](\n      ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG -> brokers,\n      ConsumerConfig.GROUP_ID_CONFIG -> groupId,\n      ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG ->\n        \"org.apache.kafka.common.serialization.StringDeserializer\",\n      ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG ->\n        \"org.apache.kafka.common.serialization.StringDeserializer\",\n      ConsumerConfig.AUTO_OFFSET_RESET_CONFIG -> offsetReset,\n      ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG -> \"false\",\n      \"spark.kafka.poll.time\" -> pollTimeout\n    )\n\n    val consumerStrategy = ConsumerStrategies.Subscribe[String, String](topicsSet, kafkaParams)\n    val messagesDStream = KafkaUtils.createDirectStream[String, String](\n      ssc, LocationStrategies.PreferConsistent, consumerStrategy\n    )\n\n    val valuesDStream = messagesDStream.map(_.value())\n\n    valuesDStream.foreachRDD { (rdd: RDD[String], time: Time) =>\n      // There exists at least one element in RDD\n      if (!rdd.isEmpty) {\n        val count = rdd.count\n        println(\"count received \" + count)\n        val spark = SparkSession.builder.config(rdd.sparkContext.getConf).getOrCreate()\n        import spark.implicits._\n\n        import org.apache.spark.sql.functions._\n        val df: Dataset[Click] = spark.read.schema(schema).json(rdd).as[Click]\n        df.show(20,false)\n        //The reason to use the createOrReplaceTempView( tableName ) method for a DataFrame is so that in addition to being able to use the Spark provided methods of a DataFrame, you can also issue SQL queries via the SparkSession.sql( sqlQuery ) method which use the DataFrame as a SQL table.\n        df.createOrReplaceTempView(\"weblog_snapshot\")\n        spark.sql(\"select count(*) from weblog_snapshot\").show\n      }\n    }","user":"anonymous","dateUpdated":"2017-09-19T10:51:18-0700","config":{"editorMode":"ace/mode/scala","colWidth":12,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"},"tableHide":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ngroupId: String = clickstream_reader\n\noffsetReset: String = earliest\n\npollTimeout: String = 5000\n\ntopicc: String = /tmp/clickstream:weblog\n\nbrokers: String = kafkabroker.example.com:9092\n\nssc: org.apache.spark.streaming.StreamingContext = org.apache.spark.streaming.StreamingContext@55410fbc\n\ntopicsSet: scala.collection.immutable.Set[String] = Set(/tmp/clickstream:weblog)\n\nkafkaParams: scala.collection.immutable.Map[String,String] = Map(key.deserializer -> org.apache.kafka.common.serialization.StringDeserializer, auto.offset.reset -> earliest, spark.kafka.poll.time -> 5000, group.id -> clickstream_reader, bootstrap.servers -> kafkabroker.example.com:9092, enable.auto.commit -> false, value.deserializer -> org.apache.kafka.common.serialization.StringDeserializer)\n\nconsumerStrategy: org.apache.spark.streaming.kafka09.ConsumerStrategy[String,String] = Subscribe([/tmp/clickstream:weblog],{key.deserializer=org.apache.kafka.common.serialization.StringDeserializer, value.deserializer=org.apache.kafka.common.serialization.StringDeserializer, enable.auto.commit=false, group.id=clickstream_reader, spark.kafka.poll.time=5000, bootstrap.servers=kafkabroker.example.com:9092, auto.offset.reset=earliest},{})\n\nmessagesDStream: org.apache.spark.streaming.dstream.InputDStream[org.apache.kafka.clients.consumer.ConsumerRecord[String,String]] = org.apache.spark.streaming.kafka09.DirectKafkaInputDStream@72db2c8e\n\nvaluesDStream: org.apache.spark.streaming.dstream.DStream[String] = org.apache.spark.streaming.dstream.MappedDStream@5873bc96\n"}]},"apps":[],"jobName":"paragraph_1505337712547_-1283484268","id":"20161031-135918_684283256","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-19T10:51:13-0700","dateFinished":"2017-09-19T10:51:15-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6194"},{"title":"Ready, Set, Go!  Read up to 10 seconds of streaming data.","text":"// Zeppelin's Spark interpretter cannot start the spark context once it has been stopped. After this paragraph\n// completes you will need to restart the Spark interpretter in order to run this paragraph again.\nssc.start()\nssc.awaitTerminationOrTimeout(10 * 1000)\nssc.stop(stopSparkContext = false, stopGracefully = false)","user":"anonymous","dateUpdated":"2017-09-19T10:52:20-0700","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"},"title":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"count received 10000\n+-------+---------------------+-----+-------+----------------+--------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+\n|user_id|datetime             |os   |browser|response_time_ms|product             |url                                                                                                                                                    |\n+-------+---------------------+-----+-------+----------------+--------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+\n|304    |2017-09-01 12:00:00.0|win7 |IE     |2385            |personal_credit_card|https://sites.chase.com/content/services/structured-image/image.banner.jpg/XCRT/Native/Banner/2017/STATIC_AD-A50755_Banner_NativeBanner_Image_90x90.jpg|\n|23065  |2017-09-01 12:00:00.0|win7 |Firefox|2283            |home_insurance      |https://i.liadm.com/s/28214                                                                                                                            |\n|979    |2017-09-01 12:00:09.0|xp   |Mobile |2129            |personal_credit_card|https://stags.bluekai.com/site/39254                                                                                                                   |\n|24197  |2017-09-01 12:00:24.0|xp   |Chrome |1725            |personal_credit_card|https://static.chasecdn.com/web/library/blue-core/dist/blue/2.9.0/js/dom/body/dimensions.js                                                            |\n|7760   |2017-09-01 12:00:58.0|win7 |Chrome |1325            |personal_credit_card|https://www.chase.com/online/Home/images/wa01.gif                                                                                                      |\n|15814  |2017-09-01 12:02:42.0|win7 |Mobile |2726            |home_mortgage_loan  |https://www.chase.com/apps/services/tagmanager/cpo/accounts/creditCardAccount                                                                          |\n|45023  |2017-09-01 12:03:54.0|win7 |Firefox|7686            |auto_loan           |https://www.chase.com/apps/services/tagmanager/cpo/customerService/helpAndSupport/accountHelpAndSupport/requestVoiceOfTheCustomerSurveyOptionOverlay   |\n|10022  |2017-09-01 12:04:22.0|win7 |Chrome |2080            |auto_loan           |https://static.chasecdn.com/web/2017.08.27-1385/dashboard/assets/dashboard.css                                                                         |\n|30455  |2017-09-01 12:05:34.0|xp   |Firefox|7393            |debit_card          |https://static.chasecdn.com/content/resource-bundles/digital-ui/1-8-0-23/en/bundles.json/campaign.json                                                 |\n|24133  |2017-09-01 12:08:05.0|win8 |Chrome |4119            |home_insurance      |https://static.chasecdn.com/web/2017.08.27-1385/logon/js/boot.js                                                                                       |\n|0      |2017-09-01 12:10:07.0|win7 |Chrome |2836            |home_mortgage_loan  |https://static.chasecdn.com/content/site-messages/digital-ui/en/messages.json                                                                          |\n|605    |2017-09-01 12:11:35.0|Mac  |Mobile |6898            |personal_credit_card|https://static.chasecdn.com/content/services/structured-image/image.desktop.jpg/thought-leadership/article-image/moneyalk_858x483.jpg                  |\n|61099  |2017-09-01 12:12:28.0|win7 |Mobile |9290            |debit_card          |https://sites.chase.com/content/Creatives/Public/Heroes/2017/Other/hurricane_irma_2017hero.dynamic.html                                                |\n|45262  |2017-09-01 12:14:35.0|xp   |Chrome |7706            |business_credit_card|https://ad.doubleclick.net/ddm/activity/src=2348471;type=myacc170;cat=Chase0;u1=;u2=0576853413;u3=20C73196C512F020;u8=;u20=125832920;ord=107095461     |\n|598    |2017-09-01 12:16:00.0|win8 |Firefox|1385            |home_insurance      |https://rf15.chase.com/wsb/15629/poe/59242226                                                                                                          |\n|80994  |2017-09-01 12:17:06.0|win7 |Mobile |1177            |home_mortgage_loan  |https://aa.agkn.com/adscores/g.pixel                                                                                                                   |\n|6226   |2017-09-01 12:17:39.0|xp   |Safari |6342            |medical_insurance   |https://www.chase.com/content/dam/chasecom/en/homepage/images/ad-choices-logo-blue_lite.png                                                            |\n|45089  |2017-09-01 12:19:18.0|win7 |IE     |7150            |brokerage_account   |https://static.chasecdn.com/content/card/logo.json/0478-6621.json                                                                                      |\n|24032  |2017-09-01 12:20:36.0|linux|Mobile |7376            |personal_credit_card|https://ad.doubleclick.net/ddm/activity/src=2348471;type=myacc170;cat=Chase0;u1=;u2=0576853413;u3=20C73196C512F020;u8=;u20=125832920;ord=135946175     |\n|15387  |2017-09-01 12:21:38.0|win7 |Safari |4495            |401k                |https://static.chasecdn.com/web/library/blue-view/dist/blue-view/2.8.1/js/main.js                                                                      |\n+-------+---------------------+-----+-------+----------------+--------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+\nonly showing top 20 rows\n\n+--------+\n|count(1)|\n+--------+\n|   10000|\n+--------+\n\n\nres20: Boolean = false\n"}]},"apps":[],"jobName":"paragraph_1505337712548_-1285408012","id":"20170912-095112_1485499572","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-19T10:52:20-0700","dateFinished":"2017-09-19T10:52:31-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6195"},{"title":"Show Web Site Response Time (ms)","text":"%sql\n\nselect datetime, response_time_ms from weblog_snapshot limit 1000","user":"anonymous","dateUpdated":"2017-09-19T12:24:36-0700","config":{"colWidth":12,"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{},"scatterChart":{"xAxis":{"name":"datetime","index":0,"aggr":"sum"},"yAxis":{"name":"response_time_ms","index":1,"aggr":"sum"}},"lineChart":{},"stackedAreaChart":{}},"keys":[{"name":"datetime","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"response_time_ms","index":1,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"datetime\tresponse_time_ms\n2017-09-01 12:00:00.0\t2385\n2017-09-01 12:00:00.0\t2283\n2017-09-01 12:00:09.0\t2129\n2017-09-01 12:00:24.0\t1725\n2017-09-01 12:00:58.0\t1325\n2017-09-01 12:02:42.0\t2726\n2017-09-01 12:03:54.0\t7686\n2017-09-01 12:04:22.0\t2080\n2017-09-01 12:05:34.0\t7393\n2017-09-01 12:08:05.0\t4119\n2017-09-01 12:10:07.0\t2836\n2017-09-01 12:11:35.0\t6898\n2017-09-01 12:12:28.0\t9290\n2017-09-01 12:14:35.0\t7706\n2017-09-01 12:16:00.0\t1385\n2017-09-01 12:17:06.0\t1177\n2017-09-01 12:17:39.0\t6342\n2017-09-01 12:19:18.0\t7150\n2017-09-01 12:20:36.0\t7376\n2017-09-01 12:21:38.0\t4495\n2017-09-01 12:22:55.0\t3020\n2017-09-01 12:23:53.0\t2538\n2017-09-01 12:24:57.0\t4628\n2017-09-01 12:26:39.0\t5370\n2017-09-01 12:27:51.0\t2485\n2017-09-01 12:28:30.0\t4884\n2017-09-01 12:29:33.0\t5221\n2017-09-01 12:31:49.0\t5369\n2017-09-01 12:32:30.0\t6863\n2017-09-01 12:35:15.0\t7645\n2017-09-01 12:36:46.0\t4684\n2017-09-01 12:38:38.0\t3565\n2017-09-01 12:39:04.0\t2104\n2017-09-01 12:39:52.0\t2906\n2017-09-01 12:41:16.0\t6283\n2017-09-01 12:42:12.0\t1505\n2017-09-01 12:45:24.0\t5491\n2017-09-01 12:46:34.0\t6934\n2017-09-01 12:47:45.0\t3326\n2017-09-01 12:48:59.0\t5505\n2017-09-01 12:50:06.0\t2285\n2017-09-01 12:51:33.0\t5615\n2017-09-01 12:52:31.0\t4333\n2017-09-01 12:53:22.0\t1543\n2017-09-01 12:53:50.0\t7580\n2017-09-01 12:55:26.0\t1115\n2017-09-01 12:57:12.0\t5060\n2017-09-01 12:58:23.0\t968\n2017-09-01 12:59:19.0\t5435\n2017-09-01 01:00:20.0\t2202\n2017-09-01 01:01:09.0\t548\n2017-09-01 01:02:22.0\t1351\n2017-09-01 01:03:34.0\t8277\n2017-09-01 01:04:50.0\t1091\n2017-09-01 01:06:51.0\t861\n2017-09-01 01:08:12.0\t3102\n2017-09-01 01:08:54.0\t6335\n2017-09-01 01:09:44.0\t5069\n2017-09-01 01:10:26.0\t8727\n2017-09-01 01:12:20.0\t3190\n2017-09-01 01:13:15.0\t4513\n2017-09-01 01:14:00.0\t4928\n2017-09-01 01:15:19.0\t9250\n2017-09-01 01:17:41.0\t6414\n2017-09-01 01:18:20.0\t1478\n2017-09-01 12:00:18.0\t3750\n2017-09-01 12:00:50.0\t2997\n2017-09-01 12:02:38.0\t3626\n2017-09-01 12:03:47.0\t7459\n2017-09-01 12:04:22.0\t7171\n2017-09-01 12:04:53.0\t1336\n2017-09-01 12:07:30.0\t6740\n2017-09-01 12:09:54.0\t981\n2017-09-01 12:10:51.0\t5618\n2017-09-01 12:11:48.0\t5592\n2017-09-01 12:13:53.0\t4684\n2017-09-01 12:15:01.0\t3555\n2017-09-01 12:16:45.0\t2062\n2017-09-01 12:17:34.0\t3695\n2017-09-01 12:18:22.0\t2458\n2017-09-01 12:20:29.0\t998\n2017-09-01 12:21:25.0\t4539\n2017-09-01 12:22:43.0\t6712\n2017-09-01 12:23:31.0\t4923\n2017-09-01 12:24:53.0\t4029\n2017-09-01 12:26:35.0\t747\n2017-09-01 12:27:38.0\t4795\n2017-09-01 12:28:15.0\t3375\n2017-09-01 12:29:23.0\t552\n2017-09-01 12:31:19.0\t622\n2017-09-01 12:32:29.0\t6155\n2017-09-01 12:34:26.0\t838\n2017-09-01 12:36:42.0\t760\n2017-09-01 12:38:26.0\t2412\n2017-09-01 12:39:02.0\t4668\n2017-09-01 12:39:47.0\t5807\n2017-09-01 12:40:44.0\t5593\n2017-09-01 12:41:59.0\t5586\n2017-09-01 12:45:10.0\t4887\n2017-09-01 12:46:01.0\t1834\n2017-09-01 12:47:25.0\t3860\n2017-09-01 12:48:57.0\t939\n2017-09-01 12:49:44.0\t8831\n2017-09-01 12:51:01.0\t1313\n2017-09-01 12:52:27.0\t6023\n2017-09-01 12:52:59.0\t5484\n2017-09-01 12:53:49.0\t1025\n2017-09-01 12:55:00.0\t2281\n2017-09-01 12:56:02.0\t8790\n2017-09-01 12:58:22.0\t2419\n2017-09-01 12:58:56.0\t3970\n2017-09-01 01:00:20.0\t3745\n2017-09-01 01:01:09.0\t4918\n2017-09-01 01:02:00.0\t1637\n2017-09-01 01:03:15.0\t2248\n2017-09-01 01:04:39.0\t4752\n2017-09-01 01:06:15.0\t8000\n2017-09-01 01:07:53.0\t2363\n2017-09-01 01:08:35.0\t1110\n2017-09-01 01:09:04.0\t4404\n2017-09-01 01:10:17.0\t1563\n2017-09-01 01:11:51.0\t5293\n2017-09-01 01:13:02.0\t8162\n2017-09-01 01:13:50.0\t6504\n2017-09-01 01:15:04.0\t3071\n2017-09-01 01:17:33.0\t2861\n2017-09-01 01:18:11.0\t962\n2017-09-01 01:19:27.0\t2850\n2017-09-01 12:00:35.0\t3865\n2017-09-01 12:01:27.0\t8946\n2017-09-01 12:02:50.0\t984\n2017-09-01 12:04:00.0\t1333\n2017-09-01 12:04:22.0\t4876\n2017-09-01 12:06:30.0\t4378\n2017-09-01 12:08:17.0\t5648\n2017-09-01 12:10:39.0\t840\n2017-09-01 12:11:47.0\t6517\n2017-09-01 12:12:36.0\t2824\n2017-09-01 12:14:43.0\t4634\n2017-09-01 12:16:22.0\t1749\n2017-09-01 12:17:17.0\t942\n2017-09-01 12:17:58.0\t2255\n2017-09-01 12:20:01.0\t2848\n2017-09-01 12:21:04.0\t3711\n2017-09-01 12:22:07.0\t4229\n2017-09-01 12:23:10.0\t5063\n2017-09-01 12:24:09.0\t517\n2017-09-01 12:25:42.0\t2589\n2017-09-01 12:26:53.0\t2812\n2017-09-01 12:27:56.0\t4723\n2017-09-01 12:28:48.0\t5653\n2017-09-01 12:30:02.0\t1238\n2017-09-01 12:31:51.0\t956\n2017-09-01 12:33:50.0\t9401\n2017-09-01 12:35:22.0\t2249\n2017-09-01 12:36:50.0\t8903\n2017-09-01 12:38:40.0\t1499\n2017-09-01 12:39:08.0\t6686\n2017-09-01 12:40:33.0\t1573\n2017-09-01 12:41:43.0\t6360\n2017-09-01 12:42:23.0\t8072\n2017-09-01 12:45:40.0\t5340\n2017-09-01 12:46:54.0\t1793\n2017-09-01 12:48:49.0\t562\n2017-09-01 12:49:10.0\t3718\n2017-09-01 12:50:32.0\t4037\n2017-09-01 12:52:15.0\t880\n2017-09-01 12:52:41.0\t2979\n2017-09-01 12:53:25.0\t1634\n2017-09-01 12:53:54.0\t2296\n2017-09-01 12:55:41.0\t828\n2017-09-01 12:57:24.0\t2454\n2017-09-01 12:58:35.0\t1578\n2017-09-01 12:59:51.0\t2867\n2017-09-01 01:00:36.0\t3329\n2017-09-01 01:01:38.0\t2805\n2017-09-01 01:02:53.0\t2324\n2017-09-01 01:03:52.0\t1428\n2017-09-01 01:05:16.0\t5889\n2017-09-01 01:07:04.0\t2464\n2017-09-01 01:08:22.0\t5930\n2017-09-01 01:08:56.0\t1786\n2017-09-01 01:09:46.0\t4398\n2017-09-01 01:11:39.0\t695\n2017-09-01 01:12:21.0\t4038\n2017-09-01 01:13:41.0\t791\n2017-09-01 01:14:17.0\t3964\n2017-09-01 01:15:34.0\t2707\n2017-09-01 01:18:03.0\t4789\n2017-09-01 01:18:37.0\t6539\n2017-09-01 01:20:18.0\t1085\n2017-09-01 12:00:18.0\t3012\n2017-09-01 12:00:45.0\t1028\n2017-09-01 12:02:17.0\t604\n2017-09-01 12:03:44.0\t806\n2017-09-01 12:04:00.0\t5619\n2017-09-01 12:04:52.0\t5049\n2017-09-01 12:07:06.0\t3065\n2017-09-01 12:09:23.0\t2159\n2017-09-01 12:10:45.0\t5528\n2017-09-01 12:11:48.0\t3778\n2017-09-01 12:12:43.0\t5563\n2017-09-01 12:15:00.0\t1472\n2017-09-01 12:16:36.0\t1996\n2017-09-01 12:17:28.0\t758\n2017-09-01 12:18:18.0\t1768\n2017-09-01 12:20:02.0\t6584\n2017-09-01 12:21:20.0\t4097\n2017-09-01 12:22:22.0\t7621\n2017-09-01 12:23:16.0\t1293\n2017-09-01 12:24:23.0\t8230\n2017-09-01 12:26:04.0\t7623\n2017-09-01 12:27:06.0\t3077\n2017-09-01 12:28:13.0\t1232\n2017-09-01 12:29:09.0\t842\n2017-09-01 12:30:43.0\t2024\n2017-09-01 12:32:12.0\t3493\n2017-09-01 12:33:56.0\t1773\n2017-09-01 12:35:36.0\t5009\n2017-09-01 12:37:51.0\t692\n2017-09-01 12:38:42.0\t2355\n2017-09-01 12:39:46.0\t2304\n2017-09-01 12:40:37.0\t6934\n2017-09-01 12:41:56.0\t3445\n2017-09-01 12:43:21.0\t1637\n2017-09-01 12:45:49.0\t4198\n2017-09-01 12:47:19.0\t1424\n2017-09-01 12:48:56.0\t715\n2017-09-01 12:49:33.0\t8394\n2017-09-01 12:50:36.0\t2876\n2017-09-01 12:52:27.0\t2266\n2017-09-01 12:52:57.0\t3545\n2017-09-01 12:53:25.0\t8612\n2017-09-01 12:54:43.0\t5119\n2017-09-01 12:55:58.0\t2310\n2017-09-01 12:57:45.0\t956\n2017-09-01 12:58:36.0\t1258\n2017-09-01 01:00:07.0\t6011\n2017-09-01 01:00:40.0\t7831\n2017-09-01 01:01:52.0\t635\n2017-09-01 01:02:54.0\t4061\n2017-09-01 01:04:06.0\t3227\n2017-09-01 01:06:09.0\t2361\n2017-09-01 01:07:16.0\t3121\n2017-09-01 01:08:25.0\t5180\n2017-09-01 01:09:03.0\t2572\n2017-09-01 01:10:09.0\t1715\n2017-09-01 01:11:47.0\t5370\n2017-09-01 01:12:44.0\t6198\n2017-09-01 01:13:41.0\t712\n2017-09-01 01:14:53.0\t3005\n2017-09-01 01:16:50.0\t1116\n2017-09-01 01:18:09.0\t542\n2017-09-01 01:18:58.0\t4284\n2017-09-01 01:20:44.0\t8493\n2017-09-01 01:21:55.0\t5023\n2017-09-01 01:22:32.0\t1127\n2017-09-01 01:23:01.0\t4034\n2017-09-01 01:24:33.0\t8131\n2017-09-01 01:26:14.0\t3339\n2017-09-01 01:28:09.0\t8036\n2017-09-01 01:29:14.0\t2073\n2017-09-01 01:30:14.0\t2517\n2017-09-01 01:19:39.0\t1747\n2017-09-01 01:20:57.0\t3326\n2017-09-01 01:22:15.0\t5832\n2017-09-01 01:22:47.0\t8026\n2017-09-01 01:24:18.0\t535\n2017-09-01 01:25:39.0\t1063\n2017-09-01 01:27:00.0\t6386\n2017-09-01 01:28:32.0\t5539\n2017-09-01 01:29:49.0\t2732\n2017-09-01 01:31:12.0\t4144\n2017-09-01 01:33:20.0\t4982\n2017-09-01 01:34:08.0\t4388\n2017-09-01 01:35:52.0\t2728\n2017-09-01 01:37:58.0\t5741\n2017-09-01 01:20:49.0\t6854\n2017-09-01 01:21:57.0\t6459\n2017-09-01 01:22:33.0\t4509\n2017-09-01 01:24:09.0\t6694\n2017-09-01 01:25:23.0\t6646\n2017-09-01 01:26:39.0\t3446\n2017-09-01 01:28:23.0\t7535\n2017-09-01 01:29:34.0\t2676\n2017-09-01 01:30:48.0\t7847\n2017-09-01 01:32:00.0\t1151\n2017-09-01 01:33:47.0\t1480\n2017-09-01 01:35:27.0\t2556\n2017-09-01 01:37:03.0\t960\n2017-09-01 01:38:33.0\t6750\n2017-09-01 01:41:08.0\t5613\n2017-09-01 01:42:34.0\t5131\n2017-09-01 01:44:28.0\t2739\n2017-09-01 01:46:22.0\t2208\n2017-09-01 01:21:49.0\t2475\n2017-09-01 01:22:32.0\t4309\n2017-09-01 01:22:55.0\t1001\n2017-09-01 01:24:18.0\t7123\n2017-09-01 01:25:50.0\t7047\n2017-09-01 01:27:48.0\t1303\n2017-09-01 01:29:01.0\t2892\n2017-09-01 01:29:59.0\t634\n2017-09-01 01:31:21.0\t7883\n2017-09-01 01:33:21.0\t7161\n2017-09-01 01:34:35.0\t5236\n2017-09-01 01:36:08.0\t5495\n2017-09-01 01:37:59.0\t1820\n2017-09-01 01:39:53.0\t2367\n2017-09-01 01:41:57.0\t3729\n2017-09-01 01:43:12.0\t5395\n2017-09-01 01:45:09.0\t6729\n2017-09-01 01:47:09.0\t5728\n2017-09-01 01:49:18.0\t6355\n2017-09-01 01:51:27.0\t1043\n2017-09-01 01:52:43.0\t7984\n2017-09-01 01:53:54.0\t6712\n2017-09-01 01:54:31.0\t2105\n2017-09-01 01:39:48.0\t1134\n2017-09-01 01:41:37.0\t8019\n2017-09-01 01:42:50.0\t2310\n2017-09-01 01:44:47.0\t1110\n2017-09-01 01:47:08.0\t686\n2017-09-01 01:48:52.0\t7488\n2017-09-01 01:51:26.0\t7022\n2017-09-01 01:52:16.0\t4031\n2017-09-01 01:53:35.0\t3463\n2017-09-01 01:54:17.0\t698\n2017-09-01 01:55:40.0\t3475\n2017-09-01 01:57:43.0\t609\n2017-09-01 02:00:20.0\t2443\n2017-09-01 02:00:57.0\t3029\n2017-09-01 02:03:16.0\t1950\n2017-09-01 02:04:36.0\t5037\n2017-09-01 02:05:37.0\t5030\n2017-09-01 02:06:16.0\t5928\n2017-09-01 02:09:41.0\t1809\n2017-09-01 02:10:41.0\t6079\n2017-09-01 02:12:31.0\t4504\n2017-09-01 02:14:45.0\t5167\n2017-09-01 01:31:28.0\t1875\n2017-09-01 01:33:32.0\t5104\n2017-09-01 01:34:55.0\t4711\n2017-09-01 01:36:15.0\t4365\n2017-09-01 01:38:03.0\t555\n2017-09-01 01:40:28.0\t2903\n2017-09-01 01:42:30.0\t6792\n2017-09-01 01:43:43.0\t4143\n2017-09-01 01:45:12.0\t3468\n2017-09-01 01:47:32.0\t3289\n2017-09-01 01:50:01.0\t873\n2017-09-01 01:51:39.0\t1687\n2017-09-01 01:52:56.0\t1015\n2017-09-01 01:54:08.0\t3568\n2017-09-01 01:55:13.0\t3065\n2017-09-01 01:56:06.0\t6429\n2017-09-01 01:58:49.0\t2609\n2017-09-01 02:00:36.0\t7983\n2017-09-01 02:02:51.0\t7767\n2017-09-01 02:03:42.0\t4379\n2017-09-01 02:05:13.0\t1370\n2017-09-01 02:06:15.0\t4841\n2017-09-01 02:07:50.0\t935\n2017-09-01 02:10:02.0\t5904\n2017-09-01 02:11:25.0\t3274\n2017-09-01 02:13:19.0\t692\n2017-09-01 02:15:39.0\t6933\n2017-09-01 01:48:08.0\t5186\n2017-09-01 01:50:45.0\t8178\n2017-09-01 01:51:56.0\t2515\n2017-09-01 01:53:14.0\t7467\n2017-09-01 01:54:15.0\t8379\n2017-09-01 01:55:15.0\t4649\n2017-09-01 01:56:56.0\t4195\n2017-09-01 01:59:33.0\t810\n2017-09-01 02:00:39.0\t2205\n2017-09-01 02:02:58.0\t4296\n2017-09-01 02:03:56.0\t1884\n2017-09-01 02:05:24.0\t4579\n2017-09-01 02:06:16.0\t3017\n2017-09-01 02:08:10.0\t5333\n2017-09-01 02:10:05.0\t5081\n2017-09-01 02:12:10.0\t6313\n2017-09-01 02:14:01.0\t4082\n2017-09-01 02:15:46.0\t2941\n2017-09-01 02:16:35.0\t5529\n2017-09-01 02:17:26.0\t5142\n2017-09-01 01:55:58.0\t6258\n2017-09-01 01:58:31.0\t2333\n2017-09-01 02:00:21.0\t6153\n2017-09-01 02:02:44.0\t3090\n2017-09-01 02:03:25.0\t3535\n2017-09-01 02:05:01.0\t1476\n2017-09-01 02:05:40.0\t4855\n2017-09-01 02:07:46.0\t2355\n2017-09-01 02:09:57.0\t1027\n2017-09-01 02:10:49.0\t3660\n2017-09-01 02:12:44.0\t3642\n2017-09-01 02:15:21.0\t1015\n2017-09-01 02:16:20.0\t1589\n2017-09-01 02:16:51.0\t1035\n2017-09-01 02:18:48.0\t610\n2017-09-01 02:19:32.0\t6661\n2017-09-01 02:20:27.0\t3205\n2017-09-01 02:22:11.0\t5170\n2017-09-01 02:23:13.0\t1688\n2017-09-01 02:25:49.0\t1766\n2017-09-01 02:28:03.0\t1146\n2017-09-01 02:16:10.0\t2541\n2017-09-01 02:16:42.0\t2329\n2017-09-01 02:18:34.0\t3626\n2017-09-01 02:19:00.0\t7586\n2017-09-01 02:20:26.0\t3124\n2017-09-01 02:21:06.0\t4390\n2017-09-01 02:22:51.0\t2487\n2017-09-01 02:25:43.0\t2512\n2017-09-01 02:27:12.0\t2181\n2017-09-01 02:29:49.0\t3125\n2017-09-01 02:30:45.0\t3815\n2017-09-01 02:31:46.0\t5918\n2017-09-01 02:32:23.0\t5037\n2017-09-01 02:34:25.0\t8748\n2017-09-01 02:35:23.0\t3519\n2017-09-01 02:36:05.0\t7393\n2017-09-01 02:37:02.0\t7291\n2017-09-01 02:39:14.0\t2973\n2017-09-01 02:41:11.0\t8834\n2017-09-01 02:16:30.0\t4220\n2017-09-01 02:17:03.0\t3260\n2017-09-01 02:18:52.0\t2649\n2017-09-01 02:19:58.0\t1897\n2017-09-01 02:20:41.0\t2578\n2017-09-01 02:22:13.0\t739\n2017-09-01 02:23:50.0\t4457\n2017-09-01 02:26:19.0\t4643\n2017-09-01 02:28:31.0\t6422\n2017-09-01 02:30:32.0\t907\n2017-09-01 02:31:22.0\t5758\n2017-09-01 02:32:14.0\t1716\n2017-09-01 02:33:48.0\t7150\n2017-09-01 02:35:09.0\t1953\n2017-09-01 02:35:34.0\t2922\n2017-09-01 02:36:32.0\t508\n2017-09-01 02:37:08.0\t5004\n2017-09-01 02:40:44.0\t529\n2017-09-01 02:41:44.0\t3302\n2017-09-01 02:44:21.0\t4444\n2017-09-01 02:18:54.0\t4170\n2017-09-01 02:20:07.0\t6768\n2017-09-01 02:21:04.0\t2400\n2017-09-01 02:22:37.0\t1903\n2017-09-01 02:24:42.0\t4456\n2017-09-01 02:27:09.0\t2035\n2017-09-01 02:28:55.0\t1363\n2017-09-01 02:30:35.0\t4098\n2017-09-01 02:31:37.0\t5525\n2017-09-01 02:32:20.0\t2092\n2017-09-01 02:34:13.0\t2915\n2017-09-01 02:35:09.0\t572\n2017-09-01 02:35:48.0\t6308\n2017-09-01 02:36:42.0\t4471\n2017-09-01 02:37:51.0\t4056\n2017-09-01 02:41:02.0\t3220\n2017-09-01 02:42:12.0\t5522\n2017-09-01 02:44:47.0\t9069\n2017-09-01 02:45:16.0\t2769\n2017-09-01 02:47:06.0\t4049\n2017-09-01 02:49:15.0\t803\n2017-09-01 02:52:42.0\t1261\n2017-09-01 02:30:05.0\t2278\n2017-09-01 02:30:56.0\t916\n2017-09-01 02:31:50.0\t3899\n2017-09-01 02:33:09.0\t4486\n2017-09-01 02:34:32.0\t2667\n2017-09-01 02:35:30.0\t3326\n2017-09-01 02:36:09.0\t1708\n2017-09-01 02:37:05.0\t4993\n2017-09-01 02:40:26.0\t895\n2017-09-01 02:41:33.0\t1206\n2017-09-01 02:44:04.0\t5214\n2017-09-01 02:45:08.0\t4332\n2017-09-01 02:46:12.0\t1194\n2017-09-01 02:48:17.0\t4550\n2017-09-01 02:51:10.0\t2010\n2017-09-01 02:53:26.0\t920\n2017-09-01 02:55:14.0\t1999\n2017-09-01 02:55:33.0\t6711\n2017-09-01 02:55:45.0\t5133\n2017-09-01 02:43:10.0\t1067\n2017-09-01 02:45:01.0\t8916\n2017-09-01 02:45:58.0\t5456\n2017-09-01 02:47:47.0\t1935\n2017-09-01 02:50:47.0\t3784\n2017-09-01 02:52:49.0\t8657\n2017-09-01 02:54:23.0\t6020\n2017-09-01 02:55:26.0\t3053\n2017-09-01 02:55:38.0\t3411\n2017-09-01 02:56:25.0\t4544\n2017-09-01 02:57:25.0\t3782\n2017-09-01 02:58:11.0\t2308\n2017-09-01 03:00:27.0\t793\n2017-09-01 03:01:11.0\t1010\n2017-09-01 03:02:26.0\t4266\n2017-09-01 03:03:38.0\t1042\n2017-09-01 03:06:31.0\t3911\n2017-09-01 03:08:17.0\t2576\n2017-09-01 02:45:14.0\t3209\n2017-09-01 02:46:34.0\t5093\n2017-09-01 02:48:53.0\t7479\n2017-09-01 02:52:13.0\t4892\n2017-09-01 02:53:34.0\t9090\n2017-09-01 02:55:14.0\t1816\n2017-09-01 02:55:34.0\t9759\n2017-09-01 02:56:10.0\t5646\n2017-09-01 02:56:48.0\t2105\n2017-09-01 02:58:04.0\t6193\n2017-09-01 02:58:51.0\t3496\n2017-09-01 03:01:01.0\t565\n2017-09-01 03:02:13.0\t3967\n2017-09-01 03:02:53.0\t4829\n2017-09-01 03:05:25.0\t4518\n2017-09-01 03:07:42.0\t5427\n2017-09-01 03:08:30.0\t2528\n2017-09-01 02:53:35.0\t6999\n2017-09-01 02:55:22.0\t4318\n2017-09-01 02:55:34.0\t3152\n2017-09-01 02:56:13.0\t3844\n2017-09-01 02:57:00.0\t9122\n2017-09-01 02:58:05.0\t2839\n2017-09-01 02:59:54.0\t6341\n2017-09-01 03:01:03.0\t4540\n2017-09-01 03:02:23.0\t7843\n2017-09-01 03:03:15.0\t2048\n2017-09-01 03:06:10.0\t3278\n2017-09-01 03:08:03.0\t9122\n2017-09-01 03:08:49.0\t2656\n2017-09-01 02:56:44.0\t2047\n2017-09-01 02:57:55.0\t7959\n2017-09-01 02:58:35.0\t3881\n2017-09-01 03:00:54.0\t4184\n2017-09-01 03:01:36.0\t3601\n2017-09-01 03:02:34.0\t7491\n2017-09-01 03:04:20.0\t654\n2017-09-01 03:06:36.0\t5404\n2017-09-01 03:08:20.0\t1189\n2017-09-01 03:08:54.0\t4827\n2017-09-01 03:09:28.0\t4694\n2017-09-01 03:10:56.0\t4814\n2017-09-01 03:11:33.0\t2172\n2017-09-01 03:13:13.0\t4833\n2017-09-01 03:14:27.0\t608\n2017-09-01 03:17:13.0\t5291\n2017-09-01 03:17:39.0\t3496\n2017-09-01 03:18:15.0\t8385\n2017-09-01 03:09:24.0\t3558\n2017-09-01 03:10:00.0\t568\n2017-09-01 03:11:12.0\t1630\n2017-09-01 03:12:11.0\t7823\n2017-09-01 03:13:37.0\t860\n2017-09-01 03:15:46.0\t2724\n2017-09-01 03:17:35.0\t739\n2017-09-01 03:18:02.0\t8591\n2017-09-01 03:18:28.0\t1346\n2017-09-01 03:20:41.0\t5793\n2017-09-01 03:21:51.0\t2788\n2017-09-01 03:22:43.0\t3327\n2017-09-01 03:23:35.0\t1600\n2017-09-01 03:24:57.0\t3600\n2017-09-01 03:26:32.0\t3389\n2017-09-01 03:29:23.0\t3274\n2017-09-01 03:30:06.0\t819\n2017-09-01 03:31:21.0\t1452\n2017-09-01 03:08:53.0\t3205\n2017-09-01 03:09:27.0\t5324\n2017-09-01 03:10:34.0\t3084\n2017-09-01 03:11:23.0\t5290\n2017-09-01 03:12:58.0\t1119\n2017-09-01 03:14:06.0\t7035\n2017-09-01 03:16:58.0\t2305\n2017-09-01 03:17:38.0\t3868\n2017-09-01 03:18:03.0\t5284\n2017-09-01 03:19:09.0\t2332\n2017-09-01 03:21:14.0\t1979\n2017-09-01 03:21:54.0\t1711\n2017-09-01 03:23:10.0\t6247\n2017-09-01 03:24:03.0\t746\n2017-09-01 03:25:12.0\t6778\n2017-09-01 03:27:54.0\t1930\n2017-09-01 03:29:32.0\t5833\n2017-09-01 03:30:08.0\t673\n2017-09-01 03:31:24.0\t8519\n2017-09-01 03:32:35.0\t6879\n2017-09-01 03:33:49.0\t1458\n2017-09-01 03:09:11.0\t2066\n2017-09-01 03:09:32.0\t1675\n2017-09-01 03:11:02.0\t1674\n2017-09-01 03:11:34.0\t4650\n2017-09-01 03:13:15.0\t4480\n2017-09-01 03:15:09.0\t3342\n2017-09-01 03:17:33.0\t5783\n2017-09-01 03:17:56.0\t735\n2017-09-01 03:18:20.0\t5884\n2017-09-01 03:20:37.0\t7626\n2017-09-01 03:21:38.0\t1942\n2017-09-01 03:22:31.0\t1123\n2017-09-01 03:23:12.0\t2604\n2017-09-01 03:24:22.0\t2514\n2017-09-01 03:26:02.0\t1325\n2017-09-01 03:29:10.0\t5671\n2017-09-01 03:29:52.0\t8053\n2017-09-01 03:30:48.0\t2723\n2017-09-01 03:32:22.0\t3054\n2017-09-01 03:33:11.0\t7821\n2017-09-01 03:34:50.0\t3471\n2017-09-01 03:37:10.0\t4996\n2017-09-01 03:38:48.0\t2093\n2017-09-01 03:19:24.0\t5977\n2017-09-01 03:21:18.0\t6272\n2017-09-01 03:22:03.0\t2433\n2017-09-01 03:23:12.0\t5073\n2017-09-01 03:24:15.0\t2013\n2017-09-01 03:25:42.0\t4538\n2017-09-01 03:28:24.0\t2760\n2017-09-01 03:29:33.0\t1369\n2017-09-01 03:30:23.0\t9868\n2017-09-01 03:31:50.0\t4058\n2017-09-01 03:32:51.0\t3678\n2017-09-01 03:33:59.0\t2102\n2017-09-01 03:36:41.0\t1732\n2017-09-01 03:38:08.0\t5592\n2017-09-01 03:40:36.0\t2844\n2017-09-01 03:42:32.0\t1173\n2017-09-01 03:43:14.0\t3961\n2017-09-01 03:44:40.0\t950\n2017-09-01 03:45:59.0\t3970\n2017-09-01 03:36:24.0\t3391\n2017-09-01 03:37:46.0\t4433\n2017-09-01 03:40:17.0\t5685\n2017-09-01 03:42:28.0\t840\n2017-09-01 03:43:06.0\t4158\n2017-09-01 03:44:33.0\t5138\n2017-09-01 03:45:50.0\t8044\n2017-09-01 03:46:09.0\t5735\n2017-09-01 03:48:24.0\t4123\n2017-09-01 03:50:05.0\t2638\n2017-09-01 03:51:11.0\t3196\n2017-09-01 03:52:21.0\t1204\n2017-09-01 03:53:41.0\t1267\n2017-09-01 03:54:52.0\t2400\n2017-09-01 03:56:46.0\t1348\n2017-09-01 03:57:42.0\t2931\n2017-09-01 03:58:40.0\t1984\n2017-09-01 04:00:17.0\t5048\n2017-09-01 04:02:23.0\t2044\n2017-09-01 04:02:50.0\t759\n2017-09-01 04:03:37.0\t4935\n2017-09-01 04:04:50.0\t2320\n2017-09-01 04:05:27.0\t4513\n2017-09-01 04:06:58.0\t7235\n2017-09-01 04:07:37.0\t1676\n2017-09-01 04:08:41.0\t6519\n2017-09-01 04:10:31.0\t1395\n2017-09-01 04:12:54.0\t2732\n2017-09-01 04:14:13.0\t5330\n2017-09-01 04:15:06.0\t1427\n2017-09-01 04:15:19.0\t2295\n2017-09-01 04:16:30.0\t2158\n2017-09-01 04:18:02.0\t5703\n2017-09-01 04:20:06.0\t5544\n2017-09-01 03:46:29.0\t3069\n2017-09-01 03:48:31.0\t2018\n2017-09-01 03:50:28.0\t2913\n2017-09-01 03:51:29.0\t2323\n2017-09-01 03:53:30.0\t701\n2017-09-01 03:54:21.0\t704\n2017-09-01 03:55:53.0\t1533\n2017-09-01 03:57:21.0\t6716\n2017-09-01 03:58:04.0\t1485\n2017-09-01 03:59:27.0\t5739\n2017-09-01 04:00:19.0\t4332\n2017-09-01 04:02:30.0\t2564\n2017-09-01 04:03:22.0\t5133\n2017-09-01 04:04:09.0\t955\n2017-09-01 04:05:01.0\t4962\n2017-09-01 04:05:36.0\t2216\n2017-09-01 04:07:01.0\t1164\n2017-09-01 04:07:59.0\t5389\n2017-09-01 04:09:15.0\t504\n2017-09-01 04:11:45.0\t6020\n2017-09-01 04:13:07.0\t2046\n2017-09-01 04:14:20.0\t1325\n2017-09-01 04:15:07.0\t1163\n2017-09-01 04:15:29.0\t3119\n2017-09-01 04:16:33.0\t956\n2017-09-01 04:18:32.0\t4075\n2017-09-01 04:20:09.0\t6481\n2017-09-01 03:32:32.0\t5365\n2017-09-01 03:33:32.0\t3760\n2017-09-01 03:35:04.0\t1683\n2017-09-01 03:37:17.0\t3749\n2017-09-01 03:39:06.0\t6994\n2017-09-01 03:40:54.0\t1230\n2017-09-01 03:42:42.0\t4692\n2017-09-01 03:43:53.0\t3602\n2017-09-01 03:45:19.0\t1270\n2017-09-01 03:46:08.0\t4058\n2017-09-01 03:48:02.0\t773\n2017-09-01 03:49:48.0\t1542\n2017-09-01 03:50:58.0\t1214\n2017-09-01 03:51:48.0\t7631\n2017-09-01 03:53:39.0\t7804\n2017-09-01 03:54:40.0\t529\n2017-09-01 03:56:24.0\t3823\n2017-09-01 03:57:34.0\t533\n2017-09-01 03:58:34.0\t4690\n2017-09-01 03:59:49.0\t7439\n2017-09-01 04:01:50.0\t6315\n2017-09-01 04:02:48.0\t4050\n2017-09-01 04:03:30.0\t5897\n2017-09-01 04:04:45.0\t8302\n2017-09-01 04:05:20.0\t3297\n2017-09-01 04:06:35.0\t833\n2017-09-01 04:07:36.0\t831\n2017-09-01 03:40:42.0\t5465\n2017-09-01 03:42:33.0\t947\n2017-09-01 03:43:22.0\t1028\n2017-09-01 03:44:56.0\t3508\n2017-09-01 03:46:04.0\t3752\n2017-09-01 03:47:51.0\t3699\n2017-09-01 03:49:18.0\t718\n2017-09-01 03:50:45.0\t2136\n2017-09-01 03:51:37.0\t4092\n2017-09-01 03:53:39.0\t923\n2017-09-01 03:54:36.0\t3304\n2017-09-01 03:56:02.0\t1789\n2017-09-01 03:57:34.0\t3338\n2017-09-01 03:58:09.0\t3120\n2017-09-01 03:59:34.0\t914\n2017-09-01 04:01:31.0\t3931\n2017-09-01 04:02:44.0\t4732\n2017-09-01 04:03:29.0\t3305\n2017-09-01 04:04:42.0\t7799\n2017-09-01 04:05:08.0\t1828\n2017-09-01 04:06:31.0\t4185\n2017-09-01 04:07:15.0\t4908\n2017-09-01 04:08:19.0\t685\n2017-09-01 04:10:10.0\t2018\n2017-09-01 04:11:46.0\t4675\n2017-09-01 04:13:50.0\t8975\n2017-09-01 04:21:06.0\t1492\n2017-09-01 04:22:32.0\t3558\n2017-09-01 04:24:02.0\t1561\n2017-09-01 04:24:52.0\t601\n2017-09-01 04:27:12.0\t5195\n2017-09-01 04:27:47.0\t6344\n2017-09-01 04:28:36.0\t3840\n2017-09-01 04:31:01.0\t2931\n2017-09-01 04:31:47.0\t5594\n2017-09-01 04:34:11.0\t3740\n2017-09-01 04:36:23.0\t8934\n2017-09-01 04:37:29.0\t1111\n2017-09-01 04:39:12.0\t1943\n2017-09-01 04:39:40.0\t2662\n2017-09-01 04:41:47.0\t2396\n2017-09-01 04:43:08.0\t6255\n2017-09-01 04:46:35.0\t1967\n2017-09-01 04:48:32.0\t2052\n2017-09-01 04:50:18.0\t2211\n2017-09-01 04:51:25.0\t7090\n2017-09-01 04:54:17.0\t5010\n2017-09-01 04:55:40.0\t2181\n2017-09-01 04:56:39.0\t4106\n2017-09-01 04:57:17.0\t805\n2017-09-01 04:58:33.0\t1099\n2017-09-01 04:59:06.0\t4641\n2017-09-01 05:01:27.0\t2909\n2017-09-01 05:03:26.0\t3897\n2017-09-01 05:04:24.0\t4552\n2017-09-01 05:05:24.0\t5663\n2017-09-01 04:08:28.0\t3246\n2017-09-01 04:10:25.0\t6938\n2017-09-01 04:12:38.0\t917\n2017-09-01 04:14:11.0\t4498\n2017-09-01 04:14:43.0\t5205\n2017-09-01 04:15:19.0\t5647\n2017-09-01 04:15:52.0\t2867\n2017-09-01 04:17:55.0\t4878\n2017-09-01 04:19:44.0\t1097\n2017-09-01 04:20:12.0\t3495\n2017-09-01 04:21:59.0\t1829\n2017-09-01 04:23:14.0\t3461\n2017-09-01 04:24:03.0\t925\n2017-09-01 04:25:30.0\t797\n2017-09-01 04:27:23.0\t824\n2017-09-01 04:28:20.0\t1684\n2017-09-01 04:29:08.0\t6547\n2017-09-01 04:31:29.0\t984\n2017-09-01 04:32:20.0\t3144\n2017-09-01 04:35:23.0\t2575\n2017-09-01 04:37:19.0\t2140\n2017-09-01 04:38:39.0\t4023\n2017-09-01 04:39:32.0\t3789\n2017-09-01 04:41:15.0\t5150\n2017-09-01 04:42:01.0\t4059\n2017-09-01 04:44:16.0\t4044\n2017-09-01 04:47:27.0\t5161\n2017-09-01 04:49:02.0\t3518\n2017-09-01 04:50:42.0\t8304\n2017-09-01 04:52:22.0\t7085\n2017-09-01 04:54:32.0\t1633\n2017-09-01 04:55:45.0\t4743\n2017-09-01 04:56:45.0\t3742\n2017-09-01 04:57:44.0\t2361\n2017-09-01 04:58:36.0\t5203\n2017-09-01 05:00:45.0\t6663\n2017-09-01 05:01:59.0\t1572\n2017-09-01 05:03:52.0\t645\n2017-09-01 05:05:03.0\t660\n2017-09-01 05:05:32.0\t2022\n2017-09-01 05:07:30.0\t3411\n2017-09-01 04:20:21.0\t9091\n2017-09-01 04:22:19.0\t714\n2017-09-01 04:23:39.0\t2911\n2017-09-01 04:24:13.0\t3464\n2017-09-01 04:26:48.0\t2748\n2017-09-01 04:27:34.0\t1309\n2017-09-01 04:28:29.0\t4336\n2017-09-01 04:30:02.0\t951\n2017-09-01 04:31:36.0\t1185\n2017-09-01 04:33:00.0\t9434\n2017-09-01 04:35:42.0\t1866\n2017-09-01 04:37:24.0\t5241\n2017-09-01 04:38:57.0\t5293\n2017-09-01 04:39:39.0\t3497\n2017-09-01 04:41:36.0\t3849\n2017-09-01 04:43:08.0\t1066\n2017-09-01 04:44:46.0\t3218\n2017-09-01 04:47:55.0\t1286\n2017-09-01 04:50:13.0\t722\n2017-09-01 04:51:17.0\t6241\n2017-09-01 04:53:59.0\t3952\n2017-09-01 04:55:37.0\t6324\n2017-09-01 04:55:57.0\t8927\n2017-09-01 04:57:10.0\t3034\n2017-09-01 04:58:28.0\t1452\n2017-09-01 04:58:37.0\t793\n2017-09-01 05:01:15.0\t2918\n2017-09-01 05:02:06.0\t733\n2017-09-01 05:03:54.0\t4132\n2017-09-01 05:05:17.0\t1332\n2017-09-01 05:05:37.0\t5867\n2017-09-01 05:07:34.0\t583\n2017-09-01 05:08:53.0\t5064\n2017-09-01 05:09:46.0\t1119\n2017-09-01 05:10:36.0\t6438\n2017-09-01 05:11:07.0\t3295\n2017-09-01 05:05:47.0\t5124\n2017-09-01 04:14:31.0\t7551\n2017-09-01 04:15:10.0\t4251\n2017-09-01 04:15:46.0\t6000\n2017-09-01 04:16:35.0\t4385\n2017-09-01 04:19:27.0\t1218\n2017-09-01 04:20:10.0\t2433\n2017-09-01 04:21:59.0\t5184\n2017-09-01 04:22:49.0\t7486\n2017-09-01 04:24:03.0\t7187\n2017-09-01 04:24:53.0\t5371\n2017-09-01 04:27:20.0\t7962\n2017-09-01 04:28:14.0\t2122\n2017-09-01 04:29:03.0\t7337\n2017-09-01 04:31:07.0\t4554\n2017-09-01 04:31:51.0\t1208\n2017-09-01 04:34:28.0\t1237\n2017-09-01 04:37:07.0\t5004\n2017-09-01 04:38:22.0\t634\n2017-09-01 04:39:26.0\t3182\n2017-09-01 04:40:59.0\t3006\n2017-09-01 04:41:47.0\t4185\n2017-09-01 04:43:27.0\t1937\n2017-09-01 04:47:10.0\t3227\n2017-09-01 04:48:53.0\t4777\n2017-09-01 04:50:21.0\t1985\n2017-09-01 04:51:27.0\t3932\n2017-09-01 04:54:31.0\t3615\n2017-09-01 04:55:40.0\t4307\n2017-09-01 04:56:41.0\t1861\n2017-09-01 04:57:30.0\t6366\n2017-09-01 04:58:35.0\t6373\n2017-09-01 05:00:08.0\t6855\n2017-09-01 05:01:47.0\t5218\n2017-09-01 05:03:48.0\t3611\n2017-09-01 05:04:29.0\t1833\n2017-09-01 05:05:30.0\t7944\n2017-09-01 05:06:54.0\t6632\n2017-09-01 05:08:23.0\t2883\n2017-09-01 05:09:18.0\t4670\n2017-09-01 05:10:07.0\t2813\n2017-09-01 05:10:51.0\t4072\n2017-09-01 05:11:46.0\t2024\n2017-09-01 05:08:47.0\t4097\n2017-09-01 05:09:29.0\t2207\n2017-09-01 05:10:14.0\t2427\n2017-09-01 05:10:55.0\t5964\n2017-09-01 05:12:16.0\t3556\n2017-09-01 05:13:36.0\t6530\n2017-09-01 05:13:56.0\t2710\n2017-09-01 05:15:03.0\t3953\n2017-09-01 05:15:44.0\t2189\n2017-09-01 05:18:18.0\t1195\n2017-09-01 05:18:51.0\t1776\n2017-09-01 05:19:40.0\t1621\n2017-09-01 05:20:31.0\t3225\n2017-09-01 05:20:54.0\t1594\n2017-09-01 05:22:55.0\t4360\n2017-09-01 05:23:27.0\t2467\n2017-09-01 05:24:32.0\t4017\n2017-09-01 05:25:19.0\t714\n2017-09-01 05:26:41.0\t5053\n2017-09-01 05:28:52.0\t5809\n2017-09-01 05:29:53.0\t1344\n2017-09-01 05:30:44.0\t5369\n2017-09-01 05:31:31.0\t5826\n2017-09-01 05:32:31.0\t5069\n2017-09-01 05:33:44.0\t8274\n2017-09-01 05:36:17.0\t2430\n2017-09-01 05:37:02.0\t5365\n2017-09-01 05:38:48.0\t556\n2017-09-01 05:12:58.0\t2685\n2017-09-01 05:13:43.0\t1485\n2017-09-01 05:13:57.0\t7307\n2017-09-01 05:15:15.0\t3883\n2017-09-01 05:17:15.0\t1698\n2017-09-01 05:18:28.0\t1598\n2017-09-01 05:18:58.0\t9077\n2017-09-01 05:19:59.0\t4324\n2017-09-01 05:20:38.0\t1908\n2017-09-01 05:21:23.0\t984\n2017-09-01 05:23:04.0\t7150\n2017-09-01 05:23:48.0\t2712\n2017-09-01 05:24:33.0\t3273\n2017-09-01 05:25:25.0\t3421\n2017-09-01 05:27:32.0\t4307\n2017-09-01 05:29:42.0\t5123\n2017-09-01 05:30:02.0\t2715\n2017-09-01 05:30:49.0\t4242\n2017-09-01 05:31:34.0\t2637\n2017-09-01 05:32:33.0\t2761\n2017-09-01 05:34:11.0\t4100\n2017-09-01 05:36:35.0\t6066\n2017-09-01 05:37:28.0\t4001\n2017-09-01 05:38:51.0\t7615\n2017-09-01 05:08:04.0\t3400\n2017-09-01 05:09:12.0\t1218\n2017-09-01 05:09:49.0\t5580\n2017-09-01 05:10:37.0\t6396\n2017-09-01 05:11:18.0\t4559\n2017-09-01 05:13:08.0\t708\n2017-09-01 05:13:49.0\t1166\n2017-09-01 05:14:01.0\t8746\n2017-09-01 05:15:32.0\t2099\n2017-09-01 05:17:54.0\t4717\n2017-09-01 05:18:41.0\t1769\n2017-09-01 05:19:26.0\t4278\n2017-09-01 05:20:19.0\t519\n2017-09-01 05:20:44.0\t4611\n2017-09-01 05:21:28.0\t3116\n2017-09-01 05:23:13.0\t1580\n2017-09-01 05:24:00.0\t4301\n2017-09-01 05:25:09.0\t6468\n2017-09-01 05:25:39.0\t2748\n2017-09-01 05:28:01.0\t5602\n2017-09-01 05:29:43.0\t1558\n2017-09-01 05:30:20.0\t1204\n2017-09-01 05:31:18.0\t1840\n2017-09-01 05:31:36.0\t6774\n2017-09-01 05:32:36.0\t2984\n2017-09-01 05:34:14.0\t8548\n2017-09-01 05:36:38.0\t7967\n2017-09-01 05:37:50.0\t7701\n2017-09-01 05:38:52.0\t1577\n2017-09-01 05:13:32.0\t742\n2017-09-01 05:13:50.0\t1075\n2017-09-01 05:14:58.0\t3537\n2017-09-01 05:15:33.0\t3324\n2017-09-01 05:18:13.0\t3017\n2017-09-01 05:18:41.0\t9107\n2017-09-01 05:19:26.0\t4560\n2017-09-01 05:20:22.0\t3484\n2017-09-01 05:20:53.0\t2578\n2017-09-01 05:22:34.0\t7042\n2017-09-01 05:23:25.0\t5577\n2017-09-01 05:24:11.0\t2447\n2017-09-01 05:25:12.0\t905\n2017-09-01 05:26:07.0\t4189\n2017-09-01 05:28:12.0\t3582\n2017-09-01 05:29:49.0\t7398\n2017-09-01 05:30:37.0\t3019\n2017-09-01 05:31:27.0\t3636\n2017-09-01 05:31:57.0\t1185\n2017-09-01 05:32:48.0\t3126\n"}]},"apps":[],"jobName":"paragraph_1505337712548_-1285408012","id":"20161220-085645_357172906","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-19T12:24:36-0700","dateFinished":"2017-09-19T12:24:36-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6196"},{"text":"%md # Load Data from MapR-DB\n\nThe MapR-DB OJAI Connector for Apache Spark provides an API to load and save RDDs with MapR-DB.\n","user":"anonymous","dateUpdated":"2017-09-18T16:12:30-0700","config":{"colWidth":12,"enabled":false,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Load Data from MapR-DB</h1>\n<p>The MapR-DB OJAI Connector for Apache Spark provides an API to load and save RDDs with MapR-DB.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1505773148139_893304129","id":"20170918-151908_1754601070","dateCreated":"2017-09-18T15:19:08-0700","dateStarted":"2017-09-18T16:12:17-0700","dateFinished":"2017-09-18T16:12:17-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6197"},{"title":"","text":"import com.fasterxml.jackson.annotation.{JsonIgnoreProperties, JsonProperty}\nimport org.apache.spark.{SparkConf, SparkContext}\nimport com.mapr.db.spark._\nimport spark.implicits._\nimport org.apache.spark.sql.functions._\nimport com.mapr.db.spark.impl.OJAIDocument\n","user":"anonymous","dateUpdated":"2017-09-19T22:45:08-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport com.fasterxml.jackson.annotation.{JsonIgnoreProperties, JsonProperty}\n\nimport org.apache.spark.{SparkConf, SparkContext}\n\nimport com.mapr.db.spark._\n\nimport spark.implicits._\n\nimport org.apache.spark.sql.functions._\n\nimport com.mapr.db.spark.impl.OJAIDocument\n"}]},"apps":[],"jobName":"paragraph_1505415842842_-882065714","id":"20170914-120402_1029431501","dateCreated":"2017-09-14T12:04:02-0700","dateStarted":"2017-09-19T22:45:08-0700","dateFinished":"2017-09-19T22:45:09-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6198"},{"title":"Load Data from MapR-DB as a Spark RDD","text":"// MapR-DB table returned as an RDD where each row is a JSON document\nval rdd = sc.loadFromMapRDB(\"/mapr/my.cluster.com/tmp/crm_data\").select(\"name\", \"address\", \"first_visit\", \"zip\", \"sentiment\", \"persona\", \"churn_risk\");\nprintln(\"Number of records loaded from MapR-DB: \" + rdd.count)\nval stringrdd = rdd.map(x => x.getDoc.asJsonString())\nval crm_df = sqlContext.read.json(stringrdd)\n// add a user_id to this dataframe to make it easier to join with the clickstream\ncrm_df.withColumn(\"user_id\",monotonicallyIncreasingId).createOrReplaceTempView(\"crm_table\")\ncrm_df.show(5)\n","user":"anonymous","dateUpdated":"2017-09-19T12:24:44-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nrdd: com.mapr.db.spark.RDD.MapRDBTableScanRDD[com.mapr.db.spark.impl.OJAIDocument] = MapRDBTableScanRDD[79] at RDD at MapRDBBaseRDD.scala:17\nNumber of records loaded from MapR-DB: 100000\n\nstringrdd: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[80] at map at <console>:57\n\ncrm_df: org.apache.spark.sql.DataFrame = [_id: string, address: string ... 6 more fields]\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n+--------------------+--------------------+----------+-----------+-----------------+-------+---------+-----+\n|                 _id|             address|churn_risk|first_visit|             name|persona|sentiment|  zip|\n+--------------------+--------------------+----------+-----------+-----------------+-------+---------+-----+\n|000022e6-163d-4b2...|48578 Sandy Maple...|         6| 07/15/2012|     Eva Peterson|      3| POSITIVE|71410|\n|00003d07-ee73-4fa...| 64 Pretty Rock Dell|         2| 10/26/2003|Richard Escalante|      2|  NEUTRAL|41101|\n|0000cdd9-035e-493...|32279 Grand Castl...|        20| 12/05/2002|       Joan Payne|      1| POSITIVE|61279|\n|0000fad6-81d1-45b...|7103 Heather Axe ...|         4| 03/19/2010|   Rachel Worrell|      3| NEGATIVE|67660|\n|0002a290-21ee-436...|15388 Sunny Beave...|         5| 10/14/2003|    Nathan Porter|      2|  NEUTRAL|21155|\n+--------------------+--------------------+----------+-----------+-----------------+-------+---------+-----+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1505405617175_1961057998","id":"20170914-091337_1451510797","dateCreated":"2017-09-14T09:13:37-0700","dateStarted":"2017-09-19T12:24:44-0700","dateFinished":"2017-09-19T12:24:48-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6199"},{"text":"spark.sql(\"select * from weblog_snapshot limit 2\").show\nspark.sql(\"select * from crm_table limit 2\").show","user":"anonymous","dateUpdated":"2017-09-19T12:24:47-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+--------------------+----+-------+----------------+--------------------+--------------------+\n|user_id|            datetime|  os|browser|response_time_ms|             product|                 url|\n+-------+--------------------+----+-------+----------------+--------------------+--------------------+\n|    304|2017-09-01 12:00:...|win7|     IE|            2385|personal_credit_card|https://sites.cha...|\n|  23065|2017-09-01 12:00:...|win7|Firefox|            2283|      home_insurance|https://i.liadm.c...|\n+-------+--------------------+----+-------+----------------+--------------------+--------------------+\n\n+--------------------+--------------------+----------+-----------+-----------------+-------+---------+-----+-------+\n|                 _id|             address|churn_risk|first_visit|             name|persona|sentiment|  zip|user_id|\n+--------------------+--------------------+----------+-----------+-----------------+-------+---------+-----+-------+\n|000022e6-163d-4b2...|48578 Sandy Maple...|         6| 07/15/2012|     Eva Peterson|      3| POSITIVE|71410|      0|\n|00003d07-ee73-4fa...| 64 Pretty Rock Dell|         2| 10/26/2003|Richard Escalante|      2|  NEUTRAL|41101|      1|\n+--------------------+--------------------+----------+-----------+-----------------+-------+---------+-----+-------+\n\n"}]},"apps":[],"jobName":"paragraph_1505407554377_913697039","id":"20170914-094554_925584909","dateCreated":"2017-09-14T09:45:54-0700","dateStarted":"2017-09-19T12:24:47-0700","dateFinished":"2017-09-19T12:24:49-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6200"},{"title":"Churn Scores previously recorded (higher scores are more likely to churn)","text":"%sql\nSELECT count(user_id), churn_risk from crm_table group by churn_risk","user":"anonymous","dateUpdated":"2017-09-19T12:24:50-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"setting":{"pieChart":{}},"commonSetting":{},"keys":[{"name":"churn_risk","index":1,"aggr":"sum"}],"groups":[],"values":[{"name":"count(user_id)","index":0,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"count(user_id)\tchurn_risk\n360\t29\n535\t26\n1346\t19\n7\t54\n955\t22\n5501\t7\n153\t34\n13\t50\n5\t57\n202\t32\n45\t43\n279\t31\n70\t39\n639\t25\n6255\t6\n1\t72\n3\t58\n4571\t9\n471\t27\n14\t51\n2\t56\n4\t52\n1750\t17\n47\t41\n445\t28\n218\t33\n6967\t5\n10699\t1\n4096\t10\n12\t48\n27\t44\n2\t61\n8677\t3\n103\t37\n3266\t12\n4\t55\n5219\t8\n3\t62\n3597\t11\n8\t49\n168\t35\n9663\t2\n7846\t4\n2899\t13\n140\t36\n1552\t18\n2517\t14\n1065\t21\n2\t59\n2235\t15\n87\t38\n308\t30\n51\t42\n824\t23\n30\t46\n1196\t20\n75\t40\n2014\t16\n26\t45\n17\t47\n8\t53\n706\t24\n"}]},"apps":[],"jobName":"paragraph_1505510474599_994997404","id":"20170915-142114_2112794512","dateCreated":"2017-09-15T14:21:14-0700","dateStarted":"2017-09-19T12:24:50-0700","dateFinished":"2017-09-19T12:24:53-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6201"},{"title":"Count number customers grouped by churn","text":"val train_df = crm_df.withColumn(\"churn_label\", expr(\"case when churn_risk >= 20 then 1 else 0 end\"))\ntrain_df.groupBy(\"churn_label\").count.show","user":"anonymous","dateUpdated":"2017-09-19T12:24:52-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ntrain_df: org.apache.spark.sql.DataFrame = [_id: string, address: string ... 7 more fields]\n+-----------+-----+\n|churn_label|count|\n+-----------+-----+\n|          1| 9330|\n|          0|90670|\n+-----------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1505515927467_-1557662716","id":"20170915-155207_1848755720","dateCreated":"2017-09-15T15:52:07-0700","dateStarted":"2017-09-19T12:24:52-0700","dateFinished":"2017-09-19T12:24:56-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6202"},{"title":"View the proportion of high / low churn scores","text":"%sql\n select count(churn_risk), case when churn_risk >= 20 then \"high risk\" else \"low risk\" end as churn_label from crm_table group by churn_risk\n","user":"anonymous","dateUpdated":"2017-09-18T16:02:04-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"pieChart","height":300,"optionOpen":false,"setting":{"pieChart":{}},"commonSetting":{},"keys":[{"name":"churn_label","index":1,"aggr":"sum"}],"groups":[],"values":[{"name":"count(churn_risk)","index":0,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"count(churn_risk)\tchurn_label\n360\thigh risk\n535\thigh risk\n1346\tlow risk\n7\thigh risk\n955\thigh risk\n5501\tlow risk\n153\thigh risk\n13\thigh risk\n5\thigh risk\n202\thigh risk\n45\thigh risk\n279\thigh risk\n70\thigh risk\n639\thigh risk\n6255\tlow risk\n1\thigh risk\n3\thigh risk\n4571\tlow risk\n471\thigh risk\n14\thigh risk\n2\thigh risk\n4\thigh risk\n1750\tlow risk\n47\thigh risk\n445\thigh risk\n218\thigh risk\n6967\tlow risk\n10699\tlow risk\n4096\tlow risk\n12\thigh risk\n27\thigh risk\n2\thigh risk\n8677\tlow risk\n103\thigh risk\n3266\tlow risk\n4\thigh risk\n5219\tlow risk\n3\thigh risk\n3597\tlow risk\n8\thigh risk\n168\thigh risk\n9663\tlow risk\n7846\tlow risk\n2899\tlow risk\n140\thigh risk\n1552\tlow risk\n2517\tlow risk\n1065\thigh risk\n2\thigh risk\n2235\tlow risk\n87\thigh risk\n308\thigh risk\n51\thigh risk\n824\thigh risk\n30\thigh risk\n1196\thigh risk\n75\thigh risk\n2014\tlow risk\n26\thigh risk\n17\thigh risk\n8\thigh risk\n706\thigh risk\n"}]},"apps":[],"jobName":"paragraph_1505512693475_242352458","id":"20170915-145813_591229382","dateCreated":"2017-09-15T14:58:13-0700","dateStarted":"2017-09-18T16:03:14-0700","dateFinished":"2017-09-18T16:03:19-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6203"},{"text":"%md # Combine RDDs from MapR-DB and MapR-Streams for Spark ML\n","user":"anonymous","dateUpdated":"2017-09-19T21:30:35-0700","config":{"colWidth":12,"enabled":false,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Combine RDDs from MapR-DB and MapR-Streams for Spark ML</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1505773223958_571359600","id":"20170918-152023_1284307314","dateCreated":"2017-09-18T15:20:23-0700","dateStarted":"2017-09-19T09:07:03-0700","dateFinished":"2017-09-19T09:07:03-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6204"},{"title":"JOIN datasets loaded from MapR-DB and MapR Streams","text":"\nval joinedDF = spark.sql(\"SELECT weblog_snapshot.datetime, weblog_snapshot.os, weblog_snapshot.browser, weblog_snapshot.response_time_ms,weblog_snapshot.product,weblog_snapshot.url, crm_table.*, case when crm_table.churn_risk >= 20 then 1 else 0 end as churn_label from weblog_snapshot JOIN crm_table ON weblog_snapshot.user_id == crm_table.user_id\")\njoinedDF.count()\njoinedDF.show(2)","user":"anonymous","dateUpdated":"2017-09-19T12:24:59-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\njoinedDF: org.apache.spark.sql.DataFrame = [datetime: timestamp, os: string ... 14 more fields]\n\nres102: Long = 10000\n+--------------------+----+-------+----------------+----------+--------------------+--------------------+--------------------+----------+-----------+----------+-------+---------+-----+-------+-----------+\n|            datetime|  os|browser|response_time_ms|   product|                 url|                 _id|             address|churn_risk|first_visit|      name|persona|sentiment|  zip|user_id|churn_label|\n+--------------------+----+-------+----------------+----------+--------------------+--------------------+--------------------+----------+-----------+----------+-------+---------+-----+-------+-----------+\n|2017-09-01 03:29:...|win7|     IE|            5671|debit_card|https://static.ch...|001c8046-44a6-4bc...|29753 Pied Pebble...|         4| 04/10/2006|Ruben Lord|      1|  NEUTRAL|33738|     26|          0|\n|2017-09-03 02:11:...|win7| Safari|            6908|debit_card|https://static.ch...|001c8046-44a6-4bc...|29753 Pied Pebble...|         4| 04/10/2006|Ruben Lord|      1|  NEUTRAL|33738|     26|          0|\n+--------------------+----+-------+----------------+----------+--------------------+--------------------+--------------------+----------+-----------+----------+-------+---------+-----+-------+-----------+\nonly showing top 2 rows\n\n"}]},"apps":[],"jobName":"paragraph_1505449930735_951892960","id":"20170914-213210_1580401051","dateCreated":"2017-09-14T21:32:10-0700","dateStarted":"2017-09-19T12:24:59-0700","dateFinished":"2017-09-19T12:25:04-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6205"},{"title":"","text":"%md # Predict Churn with Spark ML\n\nPredict the propensity of customer churn with the clickstrem + CMS data loaded above.\n","user":"anonymous","dateUpdated":"2017-09-19T09:07:26-0700","config":{"colWidth":12,"enabled":false,"results":{"0":{"graph":{"mode":"table","height":70.390625,"optionOpen":false}}},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false,"title":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Predict Churn with Spark ML</h1>\n<p>Predict the propensity of customer churn with the clickstrem + CMS data loaded above.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1505446538540_-1361630583","id":"20170914-203538_1273048701","dateCreated":"2017-09-14T20:35:38-0700","dateStarted":"2017-09-19T09:07:24-0700","dateFinished":"2017-09-19T09:07:24-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6206"},{"title":"Import Spark ML packages","text":"import org.apache.spark._\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.Dataset\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\nimport org.apache.spark.ml.classification.DecisionTreeClassificationModel\nimport org.apache.spark.mllib.evaluation.BinaryClassificationMetrics\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.tuning.ParamGridBuilder\nimport org.apache.spark.ml.tuning.CrossValidator\nimport org.apache.spark.ml.tuning.CrossValidatorModel\nimport org.apache.spark.ml.feature.VectorAssembler","user":"anonymous","dateUpdated":"2017-09-19T12:25:02-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","title":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark._\n\nimport org.apache.spark.sql.SparkSession\n\nimport org.apache.spark.sql.functions._\n\nimport org.apache.spark.sql.types._\n\nimport org.apache.spark.sql._\n\nimport org.apache.spark.sql.Dataset\n\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\n\nimport org.apache.spark.ml.classification.DecisionTreeClassificationModel\n\nimport org.apache.spark.mllib.evaluation.BinaryClassificationMetrics\n\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\nimport org.apache.spark.ml.feature.StringIndexer\n\nimport org.apache.spark.ml.tuning.ParamGridBuilder\n\nimport org.apache.spark.ml.tuning.CrossValidator\n\nimport org.apache.spark.ml.tuning.CrossValidatorModel\n\nimport org.apache.spark.ml.feature.VectorAssembler\n"}]},"apps":[],"jobName":"paragraph_1505509986339_1719006178","id":"20170915-141306_273212674","dateCreated":"2017-09-15T14:13:06-0700","dateStarted":"2017-09-19T12:25:02-0700","dateFinished":"2017-09-19T12:25:06-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6207"},{"title":"Down sample training data for faster model building","text":"val fractions = Map(0 -> .01, 1 -> 0.1)\n// keep only 1/10 of Churn=Likely (1) class and keep only 1/100 of the Churn=Unlikely (0) class\nval strain = joinedDF.stat.sampleBy(\"churn_label\", fractions, 36L)\nstrain.groupBy(\"churn_label\").count.show\nstrain.show(2)","user":"anonymous","dateUpdated":"2017-09-19T12:25:07-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfractions: scala.collection.immutable.Map[Int,Double] = Map(0 -> 0.01, 1 -> 0.1)\n\nstrain: org.apache.spark.sql.DataFrame = [datetime: timestamp, os: string ... 14 more fields]\n+-----------+-----+\n|churn_label|count|\n+-----------+-----+\n|          1|   93|\n|          0|   87|\n+-----------+-----+\n\n+--------------------+----+-------+----------------+--------------+--------------------+--------------------+--------------------+----------+-----------+------------------+-------+---------+-----+-------+-----------+\n|            datetime|  os|browser|response_time_ms|       product|                 url|                 _id|             address|churn_risk|first_visit|              name|persona|sentiment|  zip|user_id|churn_label|\n+--------------------+----+-------+----------------+--------------+--------------------+--------------------+--------------------+----------+-----------+------------------+-------+---------+-----+-------+-----------+\n|2017-09-01 08:39:...|win7| Chrome|            1175|home_insurance|https://rf15.chas...|47a64b94-9415-489...|52497 Sandy Peach...|        44| 11/28/2011|     David Kessler|      2| POSITIVE|14024|  27850|          1|\n|2017-09-01 02:18:...|win7|Firefox|            4170|home_insurance|https://www.chase...|8acb07cd-8adf-400...|22790 Windy Gate ...|         5| 01/14/1995|Alejandro Kirchner|      3| NEGATIVE|05050|  54239|          0|\n+--------------------+----+-------+----------------+--------------+--------------------+--------------------+--------------------+----------+-----------+------------------+-------+---------+-----+-------+-----------+\nonly showing top 2 rows\n\n"}]},"apps":[],"jobName":"paragraph_1505515875836_-437719965","id":"20170915-155115_2053625306","dateCreated":"2017-09-15T15:51:15-0700","dateStarted":"2017-09-19T12:25:08-0700","dateFinished":"2017-09-19T12:25:14-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6208"},{"title":"Map URLs, Browser, OS, and Product topics from the clickstream to numbers","text":"val urlindexer = new StringIndexer()\n    .setInputCol(\"url\")\n    .setOutputCol(\"url_int\")\nval productindexer = new StringIndexer()\n    .setInputCol(\"product\")\n    .setOutputCol(\"product_int\")\nval browserindexer = new StringIndexer()\n    .setInputCol(\"browser\")\n    .setOutputCol(\"browser_int\")\nval osindexer = new StringIndexer()\n    .setInputCol(\"os\")\n    .setOutputCol(\"os_int\")\nval sentimentindexer = new StringIndexer()\n    .setInputCol(\"sentiment\")\n    .setOutputCol(\"sentiment_int\")\nval labelindexer = new StringIndexer()\n      .setInputCol(\"churn_label\")\n      .setOutputCol(\"label\")","user":"anonymous","dateUpdated":"2017-09-19T12:25:09-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","title":true,"editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nurlindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_090742115607\n\nproductindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_99253e1298cc\n\nbrowserindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_fcd002dbd825\n\nosindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_7e40c5ca1907\n\nsentimentindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_44e5993ef2a2\n\nlabelindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_1e658089b339\n"}]},"apps":[],"jobName":"paragraph_1505508850400_-295783129","id":"20170915-135410_464247701","dateCreated":"2017-09-15T13:54:10-0700","dateStarted":"2017-09-19T12:25:10-0700","dateFinished":"2017-09-19T12:25:15-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6209"},{"title":"Put features into a feature vector column","text":"// Uncomment the following to use a more realistic but more time consuming pipeline\n// val featureCols = Array(\"url_int\", \"product_int\", \"browser_int\", \"os_int\", \"churn_risk\", \"persona\", \"sentiment_int\")\nval featureCols = Array(\"churn_risk\", \"persona\")\nval assembler = new VectorAssembler()\n      .setInputCols(featureCols)\n      .setOutputCol(\"features\")","user":"anonymous","dateUpdated":"2017-09-19T12:25:11-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfeatureCols: Array[String] = Array(churn_risk, persona)\n\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_bd4ea4ff2f12\n"}]},"apps":[],"jobName":"paragraph_1505509056623_1434739159","id":"20170915-135736_572118930","dateCreated":"2017-09-15T13:57:36-0700","dateStarted":"2017-09-19T12:25:15-0700","dateFinished":"2017-09-19T12:25:15-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6210"},{"title":"Create Decision Tree Estimator then set the Label and Feature Columns ","text":"val dTree = new DecisionTreeClassifier().setLabelCol(\"churn_label\")\n      .setFeaturesCol(\"features\")","user":"anonymous","dateUpdated":"2017-09-19T12:25:17-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndTree: org.apache.spark.ml.classification.DecisionTreeClassifier = dtc_fce187c5f8f8\n"}]},"apps":[],"jobName":"paragraph_1505509582563_1041861270","id":"20170915-140622_1896068921","dateCreated":"2017-09-15T14:06:22-0700","dateStarted":"2017-09-19T12:25:17-0700","dateFinished":"2017-09-19T12:25:17-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6211"},{"title":"Set up pipeline with  feature transformers and model estimator","text":"// put treeClassifier in a Pipeline.\n val pipeline = new Pipeline()\n       .setStages(Array(assembler, dTree))\n// Uncomment the following to use a more realistic but more time consuming pipeline\n//      .setStages(Array(productindexer, browserindexer, osindexer, sentimentindexer, labelindexer, assembler, dTree))","user":"anonymous","dateUpdated":"2017-09-19T12:25:19-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\npipeline: org.apache.spark.ml.Pipeline = pipeline_ad9be4b235b8\n"}]},"apps":[],"jobName":"paragraph_1505509581232_1761726462","id":"20170915-140621_405125848","dateCreated":"2017-09-15T14:06:21-0700","dateStarted":"2017-09-19T12:25:19-0700","dateFinished":"2017-09-19T12:25:20-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6212"},{"title":"Drop columns that we will not use for machine learning ","text":"val ntrain = strain.drop(\"address\").drop(\"first_visit\").drop(\"name\").drop(\"_id\").drop(\"datetime\").drop(\"user_id\").drop(\"zip\").drop(\"response_time_ms\").drop(\"url\").drop(\"os\").drop(\"browser\").drop(\"product\").drop(\"sentiment\")\nprintln(ntrain.count)\nntrain.show(2)\nntrain.cache\nntrain.printSchema()","user":"anonymous","dateUpdated":"2017-09-18T16:02:04-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nntrain: org.apache.spark.sql.DataFrame = [churn_risk: bigint, persona: bigint ... 1 more field]\n180\n+----------+-------+-----------+\n|churn_risk|persona|churn_label|\n+----------+-------+-----------+\n|        44|      2|          1|\n|         5|      3|          0|\n+----------+-------+-----------+\nonly showing top 2 rows\n\n\nres41: ntrain.type = [churn_risk: bigint, persona: bigint ... 1 more field]\nroot\n |-- churn_risk: long (nullable = true)\n |-- persona: long (nullable = true)\n |-- churn_label: integer (nullable = false)\n\n"}]},"apps":[],"jobName":"paragraph_1505516882559_166547582","id":"20170915-160802_331544115","dateCreated":"2017-09-15T16:08:02-0700","dateStarted":"2017-09-18T16:03:36-0700","dateFinished":"2017-09-18T16:03:41-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6213"},{"text":"%md ### Spark ML K-Fold Algorithm Summary:\r\nSpark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.\r\n","user":"anonymous","dateUpdated":"2017-09-18T16:02:05-0700","config":{"colWidth":12,"enabled":false,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Spark ML K-Fold Algorithm Summary:</h3>\n<p>Spark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1505517171644_1903514843","id":"20170915-161251_462296975","dateCreated":"2017-09-15T16:12:51-0700","dateStarted":"2017-09-18T14:16:19-0700","dateFinished":"2017-09-18T14:16:19-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6214"},{"title":"set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection","text":"// set param grid to Search through decision tree's maxDepth parameter for best model\n// Deeper trees are potentially more accurate, but are also more likely to overfit.\nval paramGrid = new ParamGridBuilder().addGrid(dTree.maxDepth, Array( 4, 5, 6)).build()\nval evaluator = new BinaryClassificationEvaluator()\n      .setLabelCol(\"churn_label\")\n      .setRawPredictionCol(\"prediction\")\n\n// Set up 3-fold cross validation with paramGrid\nval crossval = new CrossValidator().setEstimator(pipeline)\n      .setEvaluator(evaluator)\n      .setEstimatorParamMaps(paramGrid).setNumFolds(3)","user":"anonymous","dateUpdated":"2017-09-19T21:33:05-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","title":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n\n\n\n\n\n\n\nparamGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tdtc_fce187c5f8f8-maxDepth: 4\n}, {\n\tdtc_fce187c5f8f8-maxDepth: 5\n}, {\n\tdtc_fce187c5f8f8-maxDepth: 6\n})\n\nevaluator: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_495f605f9e82\n\ncrossval: org.apache.spark.ml.tuning.CrossValidator = cv_89dc4f250c83\n"}]},"apps":[],"jobName":"paragraph_1505517236154_168974856","id":"20170915-161356_533566655","dateCreated":"2017-09-15T16:13:56-0700","dateStarted":"2017-09-19T21:33:03-0700","dateFinished":"2017-09-19T21:33:03-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6215"},{"title":"Fit the model to the input data using K-fold cross validation","text":"val cvModel = crossval.fit(ntrain)","user":"anonymous","dateUpdated":"2017-09-18T16:02:05-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ncvModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_2e1129651340\n"}]},"apps":[],"jobName":"paragraph_1505509630916_-186580671","id":"20170915-140710_637112463","dateCreated":"2017-09-15T14:07:10-0700","dateStarted":"2017-09-18T16:03:41-0700","dateFinished":"2017-09-18T16:04:53-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6216"},{"title":"save / load the model","text":"cvModel.write.overwrite().save(\"/tmp/churn_prediction_model\")\nval sameCVModel = CrossValidatorModel.load(\"/tmp/churn_prediction_model\")","user":"anonymous","dateUpdated":"2017-09-19T12:25:42-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nsameCVModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_2e1129651340\n"}]},"apps":[],"jobName":"paragraph_1505520313764_-2084251344","id":"20170915-170513_1693217540","dateCreated":"2017-09-15T17:05:13-0700","dateStarted":"2017-09-19T12:25:39-0700","dateFinished":"2017-09-19T12:25:40-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6217"},{"title":"Get Churn Predictions","text":"val predictions_df = sameCVModel.transform(joinedDF).select(\"_id\", \"user_id\", \"prediction\")\npredictions_df.show(2)\npredictions_df.groupBy(\"prediction\").count.show","user":"anonymous","dateUpdated":"2017-09-19T12:25:43-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\npredictions_df: org.apache.spark.sql.DataFrame = [_id: string, user_id: bigint ... 1 more field]\n+--------------------+-------+----------+\n|                 _id|user_id|prediction|\n+--------------------+-------+----------+\n|001c8046-44a6-4bc...|     26|       0.0|\n|001c8046-44a6-4bc...|     26|       0.0|\n+--------------------+-------+----------+\nonly showing top 2 rows\n\n+----------+-----+\n|prediction|count|\n+----------+-----+\n|       0.0| 9053|\n|       1.0|  947|\n+----------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1505509763954_-561509990","id":"20170915-140923_1740758262","dateCreated":"2017-09-15T14:09:23-0700","dateStarted":"2017-09-19T12:25:43-0700","dateFinished":"2017-09-19T12:25:49-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6218"},{"text":"%md # Bulk Saving Data from Spark RDD to MapR-DB\nHere we save our churn insights back into MapR-DB for instant access by operational apps.","user":"anonymous","dateUpdated":"2017-09-19T16:28:40-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Bulk Saving Data from Spark RDD to MapR-DB</h1>\n<p>Here we save our churn insights back into MapR-DB for instant access by operational apps.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1505849612340_585025934","id":"20170919-123332_670020774","dateCreated":"2017-09-19T12:33:32-0700","dateStarted":"2017-09-19T16:28:40-0700","dateFinished":"2017-09-19T16:28:40-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6219"},{"title":"Save an RDD as a JSON file on MapR-FS","text":"predictions_df.write.mode(SaveMode.Overwrite).format(\"json\").save(\"predictions.json\")\n","user":"anonymous","dateUpdated":"2017-09-19T16:33:31-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","title":true,"editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1505863802067_-939201865","id":"20170919-163002_731006851","dateCreated":"2017-09-19T16:30:02-0700","dateStarted":"2017-09-19T16:30:45-0700","dateFinished":"2017-09-19T16:31:02-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6220"},{"title":"Load an RDD from a JSON file on MapR-FS","text":"val rdd = sc.textFile(\"/mapr/my.cluster.com/user/mapr/predictions.json\")\n","user":"anonymous","dateUpdated":"2017-09-19T16:33:23-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nrdd: org.apache.spark.rdd.RDD[String] = /mapr/my.cluster.com/user/mapr/predictions.json MapPartitionsRDD[752] at textFile at <console>:81\n"}]},"apps":[],"jobName":"paragraph_1505863847973_1185073433","id":"20170919-163047_1149932955","dateCreated":"2017-09-19T16:30:47-0700","dateStarted":"2017-09-19T16:31:20-0700","dateFinished":"2017-09-19T16:31:20-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6221"},{"title":"Convert an RDD[String] into JSON for the MapR-DB OJAI Connector","text":"val maprd = rdd.map(str => MapRDBSpark.newDocument(str))\n","user":"anonymous","dateUpdated":"2017-09-19T16:36:19-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nmaprd: org.apache.spark.rdd.RDD[com.mapr.db.spark.impl.OJAIDocument] = MapPartitionsRDD[753] at map at <console>:83\n"}]},"apps":[],"jobName":"paragraph_1505863889192_1593169423","id":"20170919-163129_1507422970","dateCreated":"2017-09-19T16:31:29-0700","dateStarted":"2017-09-19T16:32:23-0700","dateFinished":"2017-09-19T16:32:23-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6222"},{"title":"Persist an RDD with the MapR-DB OJAI Connector","text":"maprd.saveToMapRDB(\"/tmp/realtime_churn_predictions\", createTable = false, bulkInsert = true, idFieldPath = \"id\")\n// val rdd = sc.loadFromMapRDB(\"/tmp/realtime_churn_predictions\")\n\n","user":"anonymous","dateUpdated":"2017-09-19T16:36:22-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1505857404243_1918379719","id":"20170919-144324_1300343405","dateCreated":"2017-09-19T14:43:24-0700","dateStarted":"2017-09-19T16:36:22-0700","dateFinished":"2017-09-19T16:36:52-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6223"},{"title":"Save Churn Scores back to a MapR-DB JSON Table","text":"val rdd = sc.loadFromMapRDB(\"/tmp/crm_data\")\n// rdd.take(1).foreach(println)\nrdd.take(1)\n// val stringrdd = rdd.map(x => x.getDoc.asJsonString())\n// val df = sqlContext.read.json(stringrdd)\n// df.printSchema()\n// df.show(1)\n// predictions_df.show(1)\n\n// val rdd = df.select(to_json(struct($\"_id\", $\"address\", $\"churn_risk\"))).rdd\n// val rdd2 = predictions_df.select(to_json(struct($\"_id\", $\"user_id\", $\"prediction\"))).rdd\n\n//rdd.take(1).foreach(println)\n// rdd2.take(1)\n\n// try {\n//     rdd2.saveToMapRDB(\"/tmp/realtime_churn_predictions\", createTable= true)\n// } catch {\n//     case ex: com.mapr.db.exceptions.TableExistsException => {\n//      rdd2.saveToMapRDB(\"/tmp/realtime_churn_predictions\")\n//     }\n// }\n","user":"anonymous","dateUpdated":"2017-09-19T12:25:56-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nrdd: com.mapr.db.spark.RDD.MapRDBTableScanRDD[com.mapr.db.spark.impl.OJAIDocument] = MapRDBTableScanRDD[231] at RDD at MapRDBBaseRDD.scala:17\n\nres141: Array[com.mapr.db.spark.impl.OJAIDocument] = Array({\"_id\":\"000022e6-163d-4b2d-85e9-8d6a523a261c\",\"address\":\"48578 Sandy Maple Edge\",\"birth_date\":\"04/22/2001\",\"churn_risk\":6,\"email\":\"CarlTaylor@example.com\",\"first_visit\":\"07/15/2012\",\"gender\":\"FEMALE\",\"id\":\"000022e6-163d-4b2d-85e9-8d6a523a261c\",\"latitude\":\"31.95\",\"longitude\":\"-92.77\",\"name\":\"Eva Peterson\",\"persona\":3,\"phone_number\":\"972-319-5949\",\"sentiment\":\"POSITIVE\",\"ssn\":\"448-15-9240\",\"state\":\"wi\",\"zip\":\"71410\"})\n"}]},"apps":[],"jobName":"paragraph_1505774451477_-283216445","id":"20170918-154051_614981490","dateCreated":"2017-09-18T15:40:51-0700","dateStarted":"2017-09-19T12:25:56-0700","dateFinished":"2017-09-19T12:25:57-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6224"},{"text":"val joined_df = df.select(to_json(struct($\"_id\", $\"address\", $\"churn_risk\"))).join(\n    predictions_df, col(\"df._id\") === col(\"predictions_df._id\"), \"inner\")\n","user":"anonymous","dateUpdated":"2017-09-19T09:27:04-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\norg.apache.spark.sql.AnalysisException: cannot resolve '`df._id`' given input columns: [structtojson(named_struct(NamePlaceholder(), _id, NamePlaceholder(), address, NamePlaceholder(), churn_risk)), _id, user_id, prediction];;\n'Join Inner, ('df._id = 'predictions_df._id)\n:- Project [structtojson(named_struct(_id, _id#3454, address, address#3455, churn_risk, churn_risk#3457L)) AS structtojson(named_struct(NamePlaceholder(), _id, NamePlaceholder(), address, NamePlaceholder(), churn_risk))#3521]\n:  +- LogicalRDD [_id#3454, address#3455, birth_date#3456, churn_risk#3457L, email#3458, first_visit#3459, gender#3460, id#3461, latitude#3462, longitude#3463, name#3464, persona#3465L, phone_number#3466, sentiment#3467, ssn#3468, state#3469, zip#3470]\n+- Project [_id#49, user_id#66L, prediction#2554]\n   +- Project [datetime#1, os#2, browser#3, response_time_ms#4, product#5, url#6, _id#49, address#50, churn_risk#51L, first_visit#52, name#53, persona#54L, sentiment#55, zip#56, user_id#66L, churn_label#213, features#2494, rawPrediction#2513, probability#2533, UDF(rawPrediction#2513) AS prediction#2554]\n      +- Project [datetime#1, os#2, browser#3, response_time_ms#4, product#5, url#6, _id#49, address#50, churn_risk#51L, first_visit#52, name#53, persona#54L, sentiment#55, zip#56, user_id#66L, churn_label#213, features#2494, rawPrediction#2513, UDF(rawPrediction#2513) AS probability#2533]\n         +- Project [datetime#1, os#2, browser#3, response_time_ms#4, product#5, url#6, _id#49, address#50, churn_risk#51L, first_visit#52, name#53, persona#54L, sentiment#55, zip#56, user_id#66L, churn_label#213, features#2494, UDF(features#2494) AS rawPrediction#2513]\n            +- Project [datetime#1, os#2, browser#3, response_time_ms#4, product#5, url#6, _id#49, address#50, churn_risk#51L, first_visit#52, name#53, persona#54L, sentiment#55, zip#56, user_id#66L, churn_label#213, UDF(named_struct(churn_risk_double_vecAssembler_a7c57e032d58, cast(churn_risk#51L as double), persona_double_vecAssembler_a7c57e032d58, cast(persona#54L as double))) AS features#2494]\n               +- Project [datetime#1, os#2, browser#3, response_time_ms#4, product#5, url#6, _id#49, address#50, churn_risk#51L, first_visit#52, name#53, persona#54L, sentiment#55, zip#56, user_id#66L, CASE WHEN (churn_risk#51L >= cast(20 as bigint)) THEN 1 ELSE 0 END AS churn_label#213]\n                  +- Join Inner, (cast(user_id#0 as bigint) = user_id#66L)\n                     :- SubqueryAlias weblog_snapshot\n                     :  +- LogicalRDD [user_id#0, datetime#1, os#2, browser#3, response_time_ms#4, product#5, url#6]\n                     +- SubqueryAlias crm_table\n                        +- Project [_id#49, address#50, churn_risk#51L, first_visit#52, name#53, persona#54L, sentiment#55, zip#56, monotonically_increasing_id() AS user_id#66L]\n                           +- LogicalRDD [_id#49, address#50, churn_risk#51L, first_visit#52, name#53, persona#54L, sentiment#55, zip#56]\n\n  at org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:86)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:83)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:310)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:310)\n  at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:309)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:307)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:307)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:331)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:188)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:329)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:307)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionUp$1(QueryPlan.scala:282)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:293)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$7.apply(QueryPlan.scala:301)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:188)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:301)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:83)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:76)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:128)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:76)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:57)\n  at org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:48)\n  at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:63)\n  at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:2830)\n  at org.apache.spark.sql.Dataset.join(Dataset.scala:830)\n  ... 66 elided\n"}]},"apps":[],"jobName":"paragraph_1505777858844_-1875822958","id":"20170918-163738_495709624","dateCreated":"2017-09-18T16:37:38-0700","dateStarted":"2017-09-19T09:27:04-0700","dateFinished":"2017-09-19T09:27:04-0700","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:6225"},{"text":"import com.mapr.db.spark.impl.OJAIDocument\nimport com.mapr.db.spark.MapRDBSpark\n\n// com.mapr.db.spark.impl.OJAIDocument.newDocument(predictions_df.show(1));","user":"anonymous","dateUpdated":"2017-09-19T13:01:12-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport com.mapr.db.spark.impl.OJAIDocument\n\nimport com.mapr.db.spark.MapRDBSpark\n"}]},"apps":[],"jobName":"paragraph_1505841712651_277165591","id":"20170919-102152_277192426","dateCreated":"2017-09-19T10:21:52-0700","dateStarted":"2017-09-19T13:01:12-0700","dateFinished":"2017-09-19T13:01:13-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6226"},{"text":"val crm_rdd = sc.loadFromMapRDB(\"/mapr/my.cluster.com/tmp/crm_data\").select(\"_id\", \"name\");\ncrm_rdd.take(3).foreach(println)\n// rdd.write.option(\"Operation\", \"Insert\").saveToMapRDB(\"/tmp/usersInfo\")\ncrm_rdd.saveToMapRDB(\"/tmp/realtime_churn_prediction/tmp/realtime_churn_predictions\")\n","user":"anonymous","dateUpdated":"2017-09-19T14:49:01-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ncrm_rdd: com.mapr.db.spark.RDD.MapRDBTableScanRDD[com.mapr.db.spark.impl.OJAIDocument] = MapRDBTableScanRDD[403] at RDD at MapRDBBaseRDD.scala:17\n{\"_id\":\"000022e6-163d-4b2d-85e9-8d6a523a261c\",\"name\":\"Eva Peterson\"}\n{\"_id\":\"00003d07-ee73-4fa8-9e3e-fa806aebaf68\",\"name\":\"Richard Escalante\"}\n{\"_id\":\"0000cdd9-035e-493a-b1cf-003df6fb41ae\",\"name\":\"Joan Payne\"}\n"}]},"apps":[],"jobName":"paragraph_1505854993738_381029631","id":"20170919-140313_463714627","dateCreated":"2017-09-19T14:03:13-0700","dateStarted":"2017-09-19T14:07:14-0700","dateFinished":"2017-09-19T14:07:15-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6227"},{"text":"// val clicks = spark.sql(\"select * from weblog_snapshot\")\n// clicks.createOrReplaceTempView(\"clicks\")\n// val ds: Dataset[Click] = clicks.as[Click]\n// // This will write to /mapr/my.cluster.com/user/mapr/clicks.json\n// ds.write.mode(SaveMode.Overwrite).format(\"json\").save(\"clicks.json\")\nval filesRdd = sc.wholeTextFiles(\"maprfs:/user/mapr/clicks.json\")\nval rdd = filesRdd.map(file => MapRDBSpark.newDocument(file._2))\nrdd.take(3).foreach(println)\n\n// rdd.write.option(\"Operation\", \"Insert\").saveToMapRDB(\"/tmp/iantest\")\nrdd.saveToMapRDB(\"/tmp/iantest\",  createTable= true, idFieldPath=\"_id\")\n\n// val rdd = ds.rdd\n//rdd.take(1).saveToMapRDB(\"/tmp/realtime_churn_predictions\")\n\n// MapRDBSpark.newDocument(rdd.take(1))\n\n// try {\n//     rdd.saveToMapRDB(\"/tmp/realtime_churn_predictions\", createTable= true)\n// } catch {\n//     case ex: com.mapr.db.exceptions.TableExistsException => {\n//      rdd.saveToMapRDB(\"/tmp/realtime_churn_predictions\")\n//     }\n// }","user":"anonymous","dateUpdated":"2017-09-19T16:08:06-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\nfilesRdd: org.apache.spark.rdd.RDD[(String, String)] = maprfs:/user/mapr/clicks.json MapPartitionsRDD[666] at wholeTextFiles at <console>:86\n\nrdd: org.apache.spark.rdd.RDD[com.mapr.db.spark.impl.OJAIDocument] = MapPartitionsRDD[667] at map at <console>:83\n{\"_id\":\"02c8329d-6305-4c7f-ad23-471033fb224d\",\"prediction\":1,\"user_id\":1072}\n{\"_id\":\"001136fa-c380-4138-9938-86f301294e6a\",\"prediction\":0,\"user_id\":17}\n{\"_id\":\"002639bf-f734-48f1-b3e0-065758aee3d6\",\"prediction\":0,\"user_id\":48}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\norg.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 270.0 failed 4 times, most recent failure: Lost task 0.3 in stage 270.0 (TID 45258, nodeb, executor 1): java.lang.IllegalArgumentException: Document needs to have '_id' in the map as a key.\n\tat com.google.common.base.Preconditions.checkArgument(Preconditions.java:92)\n\tat com.mapr.db.impl.MapRDBTableImpl.insertOrReplace(MapRDBTableImpl.java:260)\n\tat com.mapr.db.spark.writers.TableInsertOrReplaceWriter.write(TableWriter.scala:20)\n\tat com.mapr.db.spark.writers.OJAIValue$$anon$1.write(OJAIKeyWriterHelper.scala:20)\n\tat com.mapr.db.spark.RDD.OJAIDocumentRDDFunctions$$anonfun$saveToMapRDB$4$$anonfun$apply$1.apply(DocumentRDDFunctions.scala:65)\n\tat com.mapr.db.spark.RDD.OJAIDocumentRDDFunctions$$anonfun$saveToMapRDB$4$$anonfun$apply$1.apply(DocumentRDDFunctions.scala:61)\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1944)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1944)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:88)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:100)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:317)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n\nDriver stacktrace:\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1436)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1424)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1423)\n  at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n  at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1423)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:802)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:802)\n  at scala.Option.foreach(Option.scala:257)\n  at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:802)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1651)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1606)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1595)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:628)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1918)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1931)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1944)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1958)\n  at org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1.apply(RDD.scala:926)\n  at org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1.apply(RDD.scala:924)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:362)\n  at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:924)\n  at com.mapr.db.spark.RDD.DocumentRDDFunctions.saveToMapRDBInternal(DocumentRDDFunctions.scala:43)\n  at com.mapr.db.spark.RDD.OJAIDocumentRDDFunctions.saveToMapRDB(DocumentRDDFunctions.scala:60)\n  ... 66 elided\nCaused by: java.lang.IllegalArgumentException: Document needs to have '_id' in the map as a key.\n  at com.google.common.base.Preconditions.checkArgument(Preconditions.java:92)\n  at com.mapr.db.impl.MapRDBTableImpl.insertOrReplace(MapRDBTableImpl.java:260)\n  at com.mapr.db.spark.writers.TableInsertOrReplaceWriter.write(TableWriter.scala:20)\n  at com.mapr.db.spark.writers.OJAIValue$$anon$1.write(OJAIKeyWriterHelper.scala:20)\n  at com.mapr.db.spark.RDD.OJAIDocumentRDDFunctions$$anonfun$saveToMapRDB$4$$anonfun$apply$1.apply(DocumentRDDFunctions.scala:65)\n  at com.mapr.db.spark.RDD.OJAIDocumentRDDFunctions$$anonfun$saveToMapRDB$4$$anonfun$apply$1.apply(DocumentRDDFunctions.scala:61)\n  at org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n  at org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n  at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1944)\n  at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1944)\n  at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:88)\n  at org.apache.spark.scheduler.Task.run(Task.scala:100)\n  at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:317)\n  ... 3 more\n"}]},"apps":[],"jobName":"paragraph_1505837304261_823121818","id":"20170919-090824_1340111452","dateCreated":"2017-09-19T09:08:24-0700","dateStarted":"2017-09-19T16:08:06-0700","dateFinished":"2017-09-19T16:08:12-0700","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:6228"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1505847393110_1429807589","id":"20170919-115633_504410455","dateCreated":"2017-09-19T11:56:33-0700","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:6229"}],"name":"Customer 360 Churn Prediction","id":"2CUQBCMWJ","angularObjects":{"2CTJ612MA:shared_process":[],"2CSSF2TSA:shared_process":[],"2CTV8579E:shared_process":[],"2CT61WH1H:shared_process":[],"2CR1GS1SU:shared_process":[],"2CSS5NKC3:shared_process":[],"2CSN2T9YW:shared_process":[],"2CTNAY1B6:shared_process":[],"2CUF3XRMG:shared_process":[],"2CRN6B13X:shared_process":[],"2CSGC5REF:shared_process":[],"2CRP8PR6Z:shared_process":[],"2CREDPWY9:shared_process":[],"2CQSHATVV:shared_process":[],"2CT8Y5X61:shared_process":[],"2CU4B4UXF:shared_process":[],"2CQT4K7YB:shared_process":[],"2CSRE32HD:shared_process":[],"2CR5HE1EK:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}