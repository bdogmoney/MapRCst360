{"paragraphs":[{"text":"%md ### Purpose:\nThis notebook reads clickstream data from the MapR Streams weblog topic and charts response times for each page view\n### Usage:\nRun the entire notebook. After it complete you will need to restart zeppelin in order to reset the Spark streaming session. There is a bug in the spark interpretter for Zeppelin which prevents us from recreating a spark streaming session once it has been stopped and we must stop it otherwise the notebook will wait forever after running `ssc.start()`\n","user":"anonymous","dateUpdated":"2017-09-14T09:23:33-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Purpose:</h3>\n<p>This notebook reads clickstream data from the MapR Streams weblog topic and charts response times for each page view</p>\n<h3>Usage:</h3>\n<p>Run the entire notebook. After it complete you will need to restart zeppelin in order to reset the Spark streaming session. There is a bug in the spark interpretter for Zeppelin which prevents us from recreating a spark streaming session once it has been stopped and we must stop it otherwise the notebook will wait forever after running <code>ssc.start()</code></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1505405945772_-740388268","id":"20170914-091905_162396471","dateCreated":"2017-09-14T09:19:05-0700","dateStarted":"2017-09-14T09:23:33-0700","dateFinished":"2017-09-14T09:23:33-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:27140"},{"text":"import org.apache.kafka.clients.consumer.ConsumerConfig\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql._\nimport org.apache.spark.streaming.{ Seconds, StreamingContext, Time , Minutes}\nimport org.apache.spark.streaming.{ Seconds, StreamingContext, Time }\nimport org.apache.spark.streaming.kafka09.{ ConsumerStrategies, KafkaUtils, LocationStrategies }\n","user":"anonymous","dateUpdated":"2017-09-15T14:10:41-0700","config":{"editorMode":"ace/mode/scala","colWidth":12,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.kafka.clients.consumer.ConsumerConfig\n\nimport org.apache.spark.SparkConf\n\nimport org.apache.spark.rdd.RDD\n\nimport org.apache.spark.sql.SparkSession\n\nimport org.apache.spark.sql.types._\n\nimport org.apache.spark.sql.functions._\n\nimport org.apache.spark.sql._\n\nimport org.apache.spark.streaming.{Seconds, StreamingContext, Time, Minutes}\n\nimport org.apache.spark.streaming.{Seconds, StreamingContext, Time}\n\nimport org.apache.spark.streaming.kafka09.{ConsumerStrategies, KafkaUtils, LocationStrategies}\n"}]},"apps":[],"jobName":"paragraph_1505337712546_-1283099519","id":"20161031-134722_1383009903","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-15T14:10:41-0700","dateFinished":"2017-09-15T14:10:42-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27141"},{"text":"case class Click(user_id: Integer, datetime: String, os: String, browser: String, response_time_ms: String, product: String, url: String) extends Serializable\nval schema = StructType(Array(\n      StructField(\"user_id\", IntegerType, true),\n      StructField(\"datetime\", StringType, true),\n      StructField(\"os\", StringType, true),\n      StructField(\"browser\", StringType, true),\n      StructField(\"response_time_ms\", StringType, true),\n      StructField(\"product\", StringType, true),\n      StructField(\"url\", StringType, true)\n    ))","user":"anonymous","dateUpdated":"2017-09-15T14:10:46-0700","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndefined class Click\n\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(user_id,IntegerType,true), StructField(datetime,StringType,true), StructField(os,StringType,true), StructField(browser,StringType,true), StructField(response_time_ms,StringType,true), StructField(product,StringType,true), StructField(url,StringType,true))\n"}]},"apps":[],"jobName":"paragraph_1505337712547_-1283484268","id":"20161031-135357_293992216","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-15T14:10:46-0700","dateFinished":"2017-09-15T14:10:47-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27142"},{"text":"val groupId = \"clickstream_reader\"\nval offsetReset = \"earliest\"\nval pollTimeout = \"5000\"\nval Array(topicc) = Array(\"/tmp/clickstream:weblog\")\nval brokers = \"kafkabroker.example.com:9092\" // not needed for MapR Streams, needed for Kafka\n\n//val sparkConf = new SparkConf().setAppName(SparkKafkaConsumer.getClass.getName)\n\nval ssc = new StreamingContext(sc, Seconds(2))\n\nval topicsSet = topicc.split(\",\").toSet\n\n    val kafkaParams = Map[String, String](\n      ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG -> brokers,\n      ConsumerConfig.GROUP_ID_CONFIG -> groupId,\n      ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG ->\n        \"org.apache.kafka.common.serialization.StringDeserializer\",\n      ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG ->\n        \"org.apache.kafka.common.serialization.StringDeserializer\",\n      ConsumerConfig.AUTO_OFFSET_RESET_CONFIG -> offsetReset,\n      ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG -> \"false\",\n      \"spark.kafka.poll.time\" -> pollTimeout\n    )\n\n    val consumerStrategy = ConsumerStrategies.Subscribe[String, String](topicsSet, kafkaParams)\n    val messagesDStream = KafkaUtils.createDirectStream[String, String](\n      ssc, LocationStrategies.PreferConsistent, consumerStrategy\n    )\n\n    val valuesDStream = messagesDStream.map(_.value())\n\n    valuesDStream.foreachRDD { (rdd: RDD[String], time: Time) =>\n      // There exists at least one element in RDD\n      if (!rdd.isEmpty) {\n        val count = rdd.count\n        println(\"count received \" + count)\n        val spark = SparkSession.builder.config(rdd.sparkContext.getConf).getOrCreate()\n        import spark.implicits._\n\n        import org.apache.spark.sql.functions._\n        val df: Dataset[Click] = spark.read.schema(schema).json(rdd).as[Click]\n        df.show\n        //The reason to use the createOrReplaceTempView( tableName ) method for a DataFrame is so that in addition to being able to use the Spark provided methods of a DataFrame, you can also issue SQL queries via the SparkSession.sql( sqlQuery ) method which use the DataFrame as a SQL table.\n        df.createOrReplaceTempView(\"weblog_snapshot\")\n        spark.sql(\"select count(*) from weblog_snapshot\").show\n      }\n    }","user":"anonymous","dateUpdated":"2017-09-15T14:10:49-0700","config":{"editorMode":"ace/mode/scala","colWidth":12,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ngroupId: String = clickstream_reader\n\noffsetReset: String = earliest\n\npollTimeout: String = 5000\n\ntopicc: String = /tmp/clickstream:weblog\n\nbrokers: String = kafkabroker.example.com:9092\n\nssc: org.apache.spark.streaming.StreamingContext = org.apache.spark.streaming.StreamingContext@9bb70ee\n\ntopicsSet: scala.collection.immutable.Set[String] = Set(/tmp/clickstream:weblog)\n\nkafkaParams: scala.collection.immutable.Map[String,String] = Map(key.deserializer -> org.apache.kafka.common.serialization.StringDeserializer, auto.offset.reset -> earliest, spark.kafka.poll.time -> 5000, group.id -> clickstream_reader, bootstrap.servers -> kafkabroker.example.com:9092, enable.auto.commit -> false, value.deserializer -> org.apache.kafka.common.serialization.StringDeserializer)\n\nconsumerStrategy: org.apache.spark.streaming.kafka09.ConsumerStrategy[String,String] = Subscribe([/tmp/clickstream:weblog],{key.deserializer=org.apache.kafka.common.serialization.StringDeserializer, value.deserializer=org.apache.kafka.common.serialization.StringDeserializer, enable.auto.commit=false, group.id=clickstream_reader, spark.kafka.poll.time=5000, bootstrap.servers=kafkabroker.example.com:9092, auto.offset.reset=earliest},{})\n\nmessagesDStream: org.apache.spark.streaming.dstream.InputDStream[org.apache.kafka.clients.consumer.ConsumerRecord[String,String]] = org.apache.spark.streaming.kafka09.DirectKafkaInputDStream@797da2dd\n\nvaluesDStream: org.apache.spark.streaming.dstream.DStream[String] = org.apache.spark.streaming.dstream.MappedDStream@5ce01c53\n"}]},"apps":[],"jobName":"paragraph_1505337712547_-1283484268","id":"20161031-135918_684283256","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-15T14:10:49-0700","dateFinished":"2017-09-15T14:10:51-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27143"},{"text":"// This paragraph can only be run once. Zeppelin's Spark interpretter does not restart the spark context properly.\nssc.remember(Minutes(1))\nssc.start()\nssc.awaitTerminationOrTimeout(10 * 1000)\nssc.stop(stopSparkContext = false, stopGracefully = false)","user":"anonymous","dateUpdated":"2017-09-15T14:10:55-0700","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"count received 10000\n+-------+-------------------+-----+-------+----------------+--------------------+--------------------+\n|user_id|           datetime|   os|browser|response_time_ms|             product|                 url|\n+-------+-------------------+-----+-------+----------------+--------------------+--------------------+\n|  63453|2017-00-01 12:00:00| win7|Firefox|            5263|automobile_insurance|https://ad.double...|\n|  70446|2017-01-01 12:01:33|  Mac| Mobile|            3023|business_credit_card|https://static.ch...|\n|  10364|2017-03-01 12:03:24| win8| Chrome|            4946|           auto_loan|https://static.ch...|\n|   3321|2017-04-01 12:04:31| win7|Firefox|             980|      home_insurance|https://static.ch...|\n|  95748|2017-06-01 12:06:33|   xp| Chrome|            5265|personal_credit_card|https://www.googl...|\n|  23657|2017-08-01 12:08:05| win7|     IE|            4188|   medical_insurance|https://www.chase...|\n|  17811|2017-00-01 12:00:23| win7| Chrome|            1697|personal_credit_card|https://ad.double...|\n|      2|2017-02-01 12:02:07|linux| Chrome|            2225|personal_credit_card|https://static.ch...|\n|  53490|2017-09-01 12:09:10| win8| Mobile|            1801|   brokerage_account|https://stags.blu...|\n|  94015|2017-03-01 12:03:36|   xp| Chrome|            4355|      home_insurance|https://static.ch...|\n|   3133|2017-04-01 12:04:42| win7| Chrome|             615|          debit_card|https://i.liadm.c...|\n|    986|2017-07-01 12:07:13| win7|     IE|            3471|          debit_card|https://static.ch...|\n|   1084|2017-08-01 12:08:13|   xp|     IE|             547|      home_insurance|https://ad.double...|\n|  28082|2017-09-01 12:09:13| win7|     IE|            2937|          debit_card|https://static.ch...|\n|  22426|2017-11-01 12:11:32|  Mac| Mobile|            3615|personal_credit_card|https://static.ch...|\n|   5088|2017-01-01 12:01:00|   xp|Firefox|            8806|personal_credit_card|https://static.ch...|\n|  51354|2017-03-01 12:03:02| win7| Chrome|             806|  home_mortgage_loan|https://static.ch...|\n|  55875|2017-04-01 12:04:11| win7|Firefox|            6174|      home_insurance|https://s.xp1.ru4...|\n|  10611|2017-06-01 12:06:24|   xp| Mobile|            4218|personal_credit_card|https://t.co/i/adsct|\n|  24745|2017-07-01 12:07:58| win8| Safari|            4417|automobile_insurance|https://static.ch...|\n+-------+-------------------+-----+-------+----------------+--------------------+--------------------+\nonly showing top 20 rows\n\n+--------+\n|count(1)|\n+--------+\n|   10000|\n+--------+\n\n\nres14: Boolean = false\n"}]},"apps":[],"jobName":"paragraph_1505337712548_-1285408012","id":"20170912-095112_1485499572","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-15T14:10:55-0700","dateFinished":"2017-09-15T14:11:07-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27144"},{"text":" spark.sql(\"select count(*) from weblog_snapshot\").show","user":"anonymous","dateUpdated":"2017-09-15T14:31:13-0700","config":{"editorMode":"ace/mode/scala","colWidth":12,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"dt","index":0,"aggr":"sum"}],"values":[{"name":"lat","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"dt","index":0,"aggr":"sum"},"yAxis":{"name":"lat","index":1,"aggr":"sum"}}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+\n|count(1)|\n+--------+\n|   10000|\n+--------+\n\n"}]},"apps":[],"jobName":"paragraph_1505337712548_-1285408012","id":"20161031-140255_1441607179","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-15T14:31:13-0700","dateFinished":"2017-09-15T14:31:13-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27145"},{"title":"Current Web Site Response Time (ms)","text":"%sql\n\nselect datetime, response_time_ms from weblog_snapshot","user":"anonymous","dateUpdated":"2017-09-15T14:33:49-0700","config":{"colWidth":12,"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{},"scatterChart":{"xAxis":{"name":"datetime","index":0,"aggr":"sum"},"yAxis":{"name":"response_time_ms","index":1,"aggr":"sum"}},"lineChart":{},"stackedAreaChart":{}},"keys":[{"name":"datetime","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"response_time_ms","index":1,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"datetime\tresponse_time_ms\n2017-00-01 12:00:00\t5263\n2017-01-01 12:01:33\t3023\n2017-03-01 12:03:24\t4946\n2017-04-01 12:04:31\t980\n2017-06-01 12:06:33\t5265\n2017-08-01 12:08:05\t4188\n2017-00-01 12:00:23\t1697\n2017-02-01 12:02:07\t2225\n2017-09-01 12:09:10\t1801\n2017-03-01 12:03:36\t4355\n2017-04-01 12:04:42\t615\n2017-07-01 12:07:13\t3471\n2017-08-01 12:08:13\t547\n2017-09-01 12:09:13\t2937\n2017-11-01 12:11:32\t3615\n2017-01-01 12:01:00\t8806\n2017-03-01 12:03:02\t806\n2017-04-01 12:04:11\t6174\n2017-06-01 12:06:24\t4218\n2017-07-01 12:07:58\t4417\n2017-08-01 12:08:59\t565\n2017-09-01 12:09:22\t8158\n2017-12-01 12:12:12\t2263\n2017-00-01 12:00:52\t1958\n2017-02-01 12:02:58\t6818\n2017-04-01 12:04:04\t6774\n2017-05-01 12:05:02\t1912\n2017-07-01 12:07:41\t508\n2017-08-01 12:08:52\t2908\n2017-09-01 12:09:15\t5311\n2017-12-01 12:12:09\t6690\n2017-12-01 12:12:47\t679\n2017-11-01 12:11:28\t1568\n2017-12-01 12:12:24\t3536\n2017-13-01 12:13:13\t5940\n2017-14-01 12:14:52\t1555\n2017-15-01 12:15:39\t2153\n2017-17-01 12:17:15\t2225\n2017-18-01 12:18:15\t8119\n2017-18-01 12:18:47\t2695\n2017-20-01 12:20:17\t4841\n2017-13-01 12:13:44\t3729\n2017-15-01 12:15:09\t1369\n2017-16-01 12:16:40\t2831\n2017-17-01 12:17:24\t8202\n2017-18-01 12:18:30\t2581\n2017-19-01 12:19:18\t3010\n2017-22-01 12:22:22\t2735\n2017-23-01 12:23:19\t509\n2017-23-01 12:23:46\t6003\n2017-26-01 12:26:23\t595\n2017-28-01 12:28:14\t2248\n2017-30-01 12:30:20\t5990\n2017-31-01 12:31:09\t5920\n2017-32-01 12:32:22\t3166\n2017-22-01 12:22:59\t3048\n2017-23-01 12:23:24\t4035\n2017-25-01 12:25:56\t2769\n2017-27-01 12:27:41\t2810\n2017-28-01 12:28:24\t7172\n2017-30-01 12:30:44\t5516\n2017-12-01 12:12:31\t3099\n2017-13-01 12:13:27\t3282\n2017-15-01 12:15:01\t2694\n2017-16-01 12:16:38\t8984\n2017-17-01 12:17:19\t8078\n2017-18-01 12:18:18\t1183\n2017-19-01 12:19:10\t2141\n2017-20-01 12:20:50\t1017\n2017-23-01 12:23:16\t1271\n2017-23-01 12:23:40\t692\n2017-26-01 12:26:17\t2338\n2017-27-01 12:27:46\t1159\n2017-28-01 12:28:48\t9318\n2017-30-01 12:30:46\t4668\n2017-32-01 12:32:06\t7466\n2017-33-01 12:33:17\t1742\n2017-35-01 12:35:30\t4920\n2017-33-01 12:33:18\t1030\n2017-35-01 12:35:54\t7556\n2017-37-01 12:37:04\t1363\n2017-38-01 12:38:10\t3420\n2017-32-01 12:32:03\t1019\n2017-33-01 12:33:11\t2048\n2017-34-01 12:34:51\t3953\n2017-36-01 12:36:08\t1811\n2017-37-01 12:37:18\t3017\n2017-38-01 12:38:24\t6113\n2017-39-01 12:39:40\t3368\n2017-38-01 12:38:55\t2517\n2017-40-01 12:40:59\t4926\n2017-42-01 12:42:38\t9770\n2017-43-01 12:43:13\t2282\n2017-44-01 12:44:19\t732\n2017-45-01 12:45:30\t743\n2017-46-01 12:46:44\t2844\n2017-48-01 12:48:26\t811\n2017-42-01 12:42:11\t2150\n2017-43-01 12:43:05\t5392\n2017-43-01 12:43:55\t3889\n2017-44-01 12:44:37\t5550\n2017-45-01 12:45:41\t536\n2017-47-01 12:47:55\t3241\n2017-48-01 12:48:43\t5527\n2017-49-01 12:49:03\t1420\n2017-50-01 12:50:24\t6307\n2017-52-01 12:52:11\t7905\n2017-55-01 12:55:17\t2002\n2017-55-01 12:55:50\t1459\n2017-57-01 12:57:17\t871\n2017-59-01 12:59:51\t4398\n2017-49-01 12:49:47\t8986\n2017-51-01 12:51:22\t927\n2017-54-01 12:54:39\t5895\n2017-55-01 12:55:34\t6295\n2017-56-01 12:56:22\t3250\n2017-58-01 12:58:24\t1248\n2017-00-01 01:00:52\t4765\n2017-01-01 01:01:27\t6187\n2017-01-01 01:01:20\t3010\n2017-02-01 01:02:26\t1155\n2017-02-01 01:02:58\t7696\n2017-36-01 12:36:18\t2355\n2017-37-01 12:37:33\t2091\n2017-38-01 12:38:42\t1672\n2017-39-01 12:39:56\t1249\n2017-42-01 12:42:23\t2598\n2017-43-01 12:43:10\t3984\n2017-44-01 12:44:03\t5138\n2017-44-01 12:44:59\t7554\n2017-46-01 12:46:11\t1931\n2017-48-01 12:48:14\t3366\n2017-48-01 12:48:48\t3478\n2017-50-01 12:50:00\t4725\n2017-52-01 12:52:03\t3287\n2017-55-01 12:55:16\t4655\n2017-55-01 12:55:47\t988\n2017-57-01 12:57:16\t537\n2017-58-01 12:58:46\t2323\n2017-00-01 01:00:57\t1716\n2017-01-01 01:01:40\t3295\n2017-03-01 01:03:13\t1363\n2017-03-01 01:03:48\t2088\n2017-05-01 01:05:22\t3498\n2017-06-01 01:06:25\t738\n2017-06-01 01:06:54\t581\n2017-07-01 01:07:55\t4295\n2017-10-01 01:10:02\t2177\n2017-03-01 01:03:18\t3358\n2017-04-01 01:04:44\t2068\n2017-06-01 01:06:02\t2639\n2017-06-01 01:06:38\t685\n2017-07-01 01:07:10\t512\n2017-08-01 01:08:01\t1850\n2017-10-01 01:10:35\t4292\n2017-11-01 01:11:43\t999\n2017-13-01 01:13:19\t1581\n2017-14-01 01:14:29\t7413\n2017-03-01 01:03:22\t2031\n2017-05-01 01:05:06\t2568\n2017-06-01 01:06:06\t3794\n2017-06-01 01:06:45\t2897\n2017-07-01 01:07:50\t1800\n2017-09-01 01:09:12\t1928\n2017-11-01 01:11:27\t7234\n2017-12-01 01:12:49\t2933\n2017-14-01 01:14:17\t1405\n2017-14-01 01:14:57\t4548\n2017-11-01 01:11:28\t2071\n2017-12-01 01:12:51\t6368\n2017-14-01 01:14:27\t5176\n2017-15-01 01:15:43\t2535\n2017-16-01 01:16:54\t1448\n2017-17-01 01:17:43\t1472\n2017-18-01 01:18:33\t1541\n2017-21-01 01:21:12\t5646\n2017-21-01 01:21:38\t4253\n2017-22-01 01:22:32\t1006\n2017-16-01 01:16:27\t4262\n2017-16-01 01:16:57\t3954\n2017-17-01 01:17:54\t873\n2017-18-01 01:18:46\t1636\n2017-21-01 01:21:22\t5780\n2017-21-01 01:21:54\t1674\n2017-22-01 01:22:45\t778\n2017-23-01 01:23:33\t4335\n2017-24-01 01:24:23\t5541\n2017-26-01 01:26:29\t3938\n2017-23-01 01:23:10\t1391\n2017-24-01 01:24:21\t2990\n2017-25-01 01:25:31\t1221\n2017-26-01 01:26:49\t5723\n2017-27-01 01:27:31\t9736\n2017-30-01 01:30:06\t842\n2017-31-01 01:31:30\t3162\n2017-16-01 01:16:50\t6325\n2017-17-01 01:17:35\t3189\n2017-18-01 01:18:23\t4704\n2017-20-01 01:20:08\t688\n2017-21-01 01:21:32\t3509\n2017-22-01 01:22:09\t5817\n2017-22-01 01:22:54\t1243\n2017-23-01 01:23:53\t7873\n2017-25-01 01:25:16\t4040\n2017-26-01 01:26:39\t7168\n2017-27-01 01:27:29\t1979\n2017-26-01 01:26:52\t2133\n2017-28-01 01:28:14\t8348\n2017-30-01 01:30:15\t5417\n2017-31-01 01:31:41\t4309\n2017-32-01 01:32:47\t6416\n2017-34-01 01:34:50\t1887\n2017-36-01 01:36:53\t4635\n2017-38-01 01:38:15\t3134\n2017-40-01 01:40:28\t1574\n2017-32-01 01:32:46\t5754\n2017-33-01 01:33:49\t4704\n2017-36-01 01:36:26\t7607\n2017-37-01 01:37:42\t2729\n2017-40-01 01:40:03\t899\n2017-40-01 01:40:50\t3031\n2017-42-01 01:42:21\t5422\n2017-43-01 01:43:18\t5086\n2017-44-01 01:44:43\t9779\n2017-45-01 01:45:26\t3798\n2017-48-01 01:48:10\t965\n2017-49-01 01:49:35\t2533\n2017-51-01 01:51:12\t4996\n2017-51-01 01:51:57\t2664\n2017-52-01 01:52:47\t4137\n2017-54-01 01:54:39\t600\n2017-56-01 01:56:22\t504\n2017-58-01 01:58:20\t4884\n2017-59-01 01:59:48\t3183\n2017-00-01 02:00:41\t7788\n2017-02-01 02:02:59\t3438\n2017-41-01 01:41:22\t7821\n2017-42-01 01:42:39\t5799\n2017-43-01 01:43:25\t4583\n2017-44-01 01:44:46\t4529\n2017-45-01 01:45:45\t4301\n2017-48-01 01:48:27\t3615\n2017-50-01 01:50:00\t3231\n2017-51-01 01:51:14\t2406\n2017-52-01 01:52:09\t4147\n2017-53-01 01:53:14\t919\n2017-55-01 01:55:01\t2005\n2017-57-01 01:57:29\t4081\n2017-58-01 01:58:39\t3910\n2017-59-01 01:59:55\t6853\n2017-04-01 02:04:11\t3316\n2017-04-01 02:04:51\t4641\n2017-05-01 02:05:10\t618\n2017-05-01 02:05:55\t1155\n2017-06-01 02:06:45\t4478\n2017-07-01 02:07:39\t4837\n2017-08-01 02:08:39\t6071\n2017-09-01 02:09:41\t1010\n2017-11-01 02:11:11\t1946\n2017-12-01 02:12:57\t2857\n2017-13-01 02:13:30\t3718\n2017-00-01 02:00:49\t5344\n2017-03-01 02:03:04\t1827\n2017-04-01 02:04:34\t4015\n2017-04-01 02:04:52\t7000\n2017-05-01 02:05:12\t777\n2017-06-01 02:06:07\t2329\n2017-06-01 02:06:56\t714\n2017-07-01 02:07:45\t804\n2017-09-01 02:09:15\t2301\n2017-10-01 02:10:30\t5126\n2017-11-01 02:11:16\t7158\n2017-13-01 02:13:09\t2689\n2017-13-01 02:13:34\t5165\n2017-14-01 02:14:56\t4446\n2017-17-01 02:17:23\t1132\n2017-18-01 02:18:59\t1038\n2017-20-01 02:20:07\t830\n2017-21-01 02:21:42\t1162\n2017-22-01 02:22:13\t3770\n2017-22-01 02:22:37\t2111\n2017-23-01 02:23:27\t6917\n2017-14-01 02:14:22\t1785\n2017-15-01 02:15:42\t6082\n2017-18-01 02:18:40\t3935\n2017-19-01 02:19:42\t8356\n2017-21-01 02:21:42\t1521\n2017-22-01 02:22:11\t6883\n2017-22-01 02:22:37\t4190\n2017-23-01 02:23:19\t1509\n2017-24-01 02:24:47\t2727\n2017-26-01 02:26:13\t3077\n2017-27-01 02:27:03\t4241\n2017-28-01 02:28:13\t3018\n2017-30-01 02:30:55\t4836\n2017-31-01 02:31:30\t2001\n2017-33-01 02:33:13\t4902\n2017-33-01 02:33:53\t5733\n2017-24-01 02:24:56\t4781\n2017-26-01 02:26:18\t9202\n2017-27-01 02:27:50\t2493\n2017-34-01 02:34:45\t1974\n2017-38-01 02:38:07\t1908\n2017-39-01 02:39:21\t1662\n2017-41-01 02:41:50\t8025\n2017-42-01 02:42:29\t1737\n2017-43-01 02:43:41\t4226\n2017-28-01 02:28:34\t994\n2017-31-01 02:31:05\t5888\n2017-31-01 02:31:54\t4036\n2017-33-01 02:33:21\t1563\n2017-34-01 02:34:00\t965\n2017-35-01 02:35:02\t1812\n2017-38-01 02:38:50\t7556\n2017-41-01 02:41:21\t2392\n2017-41-01 02:41:51\t2834\n2017-42-01 02:42:50\t3341\n2017-45-01 02:45:52\t2008\n2017-47-01 02:47:02\t2419\n2017-47-01 02:47:36\t541\n2017-49-01 02:49:22\t1143\n2017-44-01 02:44:43\t3418\n2017-45-01 02:45:55\t838\n2017-47-01 02:47:09\t1423\n2017-47-01 02:47:55\t1419\n2017-50-01 02:50:37\t1733\n2017-29-01 01:29:49\t7534\n2017-30-01 01:30:37\t1919\n2017-32-01 01:32:46\t5869\n2017-33-01 01:33:09\t726\n2017-35-01 01:35:59\t2602\n2017-37-01 01:37:10\t5798\n2017-39-01 01:39:54\t638\n2017-40-01 01:40:46\t742\n2017-42-01 01:42:18\t938\n2017-43-01 01:43:03\t2670\n2017-44-01 01:44:21\t2668\n2017-45-01 01:45:25\t5415\n2017-47-01 01:47:16\t7090\n2017-49-01 01:49:04\t2590\n2017-50-01 01:50:51\t1081\n2017-51-01 01:51:57\t5603\n2017-52-01 01:52:43\t6093\n2017-54-01 01:54:05\t6254\n2017-56-01 01:56:04\t1454\n2017-58-01 01:58:15\t3788\n2017-59-01 01:59:19\t1706\n2017-00-01 02:00:39\t2077\n2017-02-01 02:02:06\t1631\n2017-04-01 02:04:09\t1083\n2017-04-01 02:04:43\t3049\n2017-04-01 02:04:57\t5613\n2017-05-01 02:05:54\t3144\n2017-06-01 02:06:38\t5417\n2017-07-01 02:07:25\t2820\n2017-08-01 02:08:32\t1428\n2017-09-01 02:09:39\t7336\n2017-11-01 02:11:06\t4716\n2017-12-01 02:12:39\t7066\n2017-13-01 02:13:29\t2054\n2017-13-01 02:13:47\t3006\n2017-15-01 02:15:42\t1035\n2017-18-01 02:18:15\t1466\n2017-19-01 02:19:30\t657\n2017-21-01 02:21:31\t4342\n2017-22-01 02:22:09\t1576\n2017-22-01 02:22:34\t8352\n2017-22-01 02:22:50\t546\n2017-24-01 02:24:42\t4866\n2017-25-01 02:25:39\t1790\n2017-26-01 02:26:34\t6480\n2017-28-01 02:28:08\t8148\n2017-30-01 02:30:38\t6203\n2017-31-01 02:31:27\t1206\n2017-33-01 02:33:08\t3840\n2017-33-01 02:33:43\t4772\n2017-34-01 02:34:41\t848\n2017-37-01 02:37:59\t509\n2017-39-01 02:39:15\t3972\n2017-41-01 02:41:35\t896\n2017-42-01 02:42:05\t3223\n2017-43-01 02:43:33\t7829\n2017-44-01 02:44:59\t3999\n2017-46-01 02:46:24\t6536\n2017-47-01 02:47:15\t9433\n2017-48-01 02:48:55\t2677\n2017-13-01 12:13:05\t4596\n2017-13-01 12:13:56\t5678\n2017-15-01 12:15:34\t2826\n2017-16-01 12:16:53\t765\n2017-18-01 12:18:08\t2415\n2017-18-01 12:18:30\t1530\n2017-19-01 12:19:43\t815\n2017-22-01 12:22:58\t814\n2017-23-01 12:23:22\t726\n2017-24-01 12:24:35\t7889\n2017-26-01 12:26:27\t4275\n2017-28-01 12:28:18\t7196\n2017-30-01 12:30:20\t3883\n2017-31-01 12:31:39\t3708\n2017-32-01 12:32:36\t3271\n2017-34-01 12:34:10\t5475\n2017-35-01 12:35:57\t510\n2017-37-01 12:37:12\t4822\n2017-38-01 12:38:20\t2383\n2017-39-01 12:39:11\t2672\n2017-41-01 12:41:20\t1612\n2017-42-01 12:42:57\t730\n2017-43-01 12:43:41\t4341\n2017-44-01 12:44:28\t4313\n2017-45-01 12:45:38\t2962\n2017-47-01 12:47:04\t2633\n2017-48-01 12:48:38\t1768\n2017-49-01 12:49:14\t4820\n2017-50-01 12:50:54\t7106\n2017-53-01 12:53:58\t3207\n2017-55-01 12:55:20\t2600\n2017-55-01 12:55:52\t2353\n2017-58-01 12:58:03\t3994\n2017-00-01 01:00:45\t1032\n2017-01-01 01:01:24\t954\n2017-02-01 01:02:53\t7666\n2017-03-01 01:03:21\t2951\n2017-04-01 01:04:56\t3024\n2017-06-01 01:06:05\t7891\n2017-06-01 01:06:40\t1437\n2017-07-01 01:07:33\t664\n2017-09-01 01:09:09\t4472\n2017-10-01 01:10:40\t1069\n2017-12-01 01:12:20\t6160\n2017-13-01 01:13:26\t5206\n2017-14-01 01:14:40\t5940\n2017-16-01 01:16:32\t3146\n2017-17-01 01:17:11\t3683\n2017-18-01 01:18:09\t2267\n2017-19-01 01:19:46\t2403\n2017-21-01 01:21:31\t7445\n2017-21-01 01:21:55\t1590\n2017-22-01 01:22:51\t722\n2017-23-01 01:23:46\t1746\n2017-24-01 01:24:57\t4271\n2017-26-01 01:26:34\t3501\n2017-27-01 01:27:16\t7576\n2017-29-01 01:29:24\t851\n2017-30-01 01:30:27\t6940\n2017-32-01 01:32:13\t3248\n2017-32-01 01:32:48\t1544\n2017-35-01 01:35:21\t2220\n2017-37-01 01:37:02\t5017\n2017-38-01 01:38:38\t2408\n2017-40-01 01:40:28\t3361\n2017-42-01 01:42:12\t5344\n2017-42-01 01:42:54\t636\n2017-44-01 01:44:05\t8517\n2017-45-01 01:45:11\t4522\n2017-45-01 01:45:52\t1727\n2017-48-01 01:48:41\t2211\n2017-50-01 01:50:03\t1262\n2017-51-01 01:51:21\t5814\n2017-52-01 01:52:37\t1565\n2017-53-01 01:53:45\t3348\n2017-55-01 01:55:56\t3589\n2017-57-01 01:57:32\t1355\n2017-59-01 01:59:00\t2978\n2017-00-01 02:00:06\t4298\n2017-01-01 02:01:26\t536\n2017-03-01 02:03:16\t3977\n2017-04-01 02:04:38\t3021\n2017-04-01 02:04:53\t3409\n2017-05-01 02:05:30\t3877\n2017-06-01 02:06:18\t1041\n2017-07-01 02:07:22\t1460\n2017-08-01 02:08:11\t5550\n2017-09-01 02:09:24\t1720\n2017-10-01 02:10:58\t2166\n2017-12-01 02:12:33\t2940\n2017-13-01 02:13:18\t8152\n2017-13-01 02:13:40\t4258\n2017-15-01 02:15:36\t654\n2017-18-01 02:18:00\t2467\n2017-19-01 02:19:30\t7049\n2017-21-01 02:21:19\t1908\n2017-21-01 02:21:46\t3993\n2017-22-01 02:22:30\t8191\n2017-22-01 02:22:48\t3067\n2017-24-01 02:24:41\t2377\n2017-50-01 02:50:48\t2625\n2017-52-01 02:52:53\t6492\n2017-53-01 02:53:34\t814\n2017-55-01 02:55:10\t680\n2017-55-01 02:55:43\t5508\n2017-57-01 02:57:35\t847\n2017-59-01 02:59:22\t7552\n2017-00-01 03:00:30\t3870\n2017-50-01 02:50:57\t5271\n2017-53-01 02:53:07\t2889\n2017-53-01 02:53:45\t2661\n2017-55-01 02:55:13\t1550\n2017-56-01 02:56:53\t1117\n2017-57-01 02:57:48\t1492\n2017-59-01 02:59:22\t2737\n2017-00-01 03:00:40\t885\n2017-51-01 02:51:36\t2417\n2017-53-01 02:53:32\t2196\n2017-54-01 02:54:09\t2309\n2017-55-01 02:55:37\t1842\n2017-57-01 02:57:06\t4086\n2017-58-01 02:58:26\t4029\n2017-59-01 02:59:47\t1204\n2017-00-01 03:00:59\t6316\n2017-01-01 03:01:11\t4209\n2017-02-01 03:02:12\t2885\n2017-02-01 03:02:55\t4215\n2017-05-01 03:05:05\t971\n2017-06-01 03:06:00\t6068\n2017-07-01 03:07:26\t8345\n2017-08-01 03:08:40\t5236\n2017-09-01 03:09:32\t5977\n2017-11-01 03:11:41\t1349\n2017-12-01 03:12:18\t3815\n2017-12-01 03:12:53\t2473\n2017-01-01 03:01:41\t2414\n2017-02-01 03:02:23\t7875\n2017-03-01 03:03:24\t5425\n2017-05-01 03:05:06\t1338\n2017-06-01 03:06:12\t651\n2017-07-01 03:07:55\t3379\n2017-09-01 03:09:11\t3389\n2017-10-01 03:10:39\t2969\n2017-12-01 03:12:05\t4025\n2017-12-01 03:12:18\t1248\n2017-13-01 03:13:01\t1808\n2017-01-01 03:01:50\t1213\n2017-02-01 03:02:29\t1593\n2017-04-01 03:04:42\t4468\n2017-05-01 03:05:36\t5583\n2017-06-01 03:06:45\t7553\n2017-08-01 03:08:03\t3101\n2017-09-01 03:09:25\t4635\n2017-10-01 03:10:45\t8248\n2017-12-01 03:12:11\t4061\n2017-12-01 03:12:27\t4669\n2017-13-01 03:13:38\t1401\n2017-14-01 03:14:39\t1117\n2017-15-01 03:15:37\t1961\n2017-16-01 03:16:03\t2301\n2017-17-01 03:17:58\t1719\n2017-20-01 03:20:26\t1096\n2017-21-01 03:21:25\t4607\n2017-22-01 03:22:14\t801\n2017-15-01 03:15:27\t5221\n2017-15-01 03:15:46\t1449\n2017-16-01 03:16:41\t642\n2017-18-01 03:18:07\t3370\n2017-20-01 03:20:35\t1958\n2017-21-01 03:21:43\t4654\n2017-22-01 03:22:45\t2222\n2017-15-01 03:15:34\t1841\n2017-15-01 03:15:47\t3621\n2017-17-01 03:17:00\t7926\n2017-18-01 03:18:54\t697\n2017-20-01 03:20:44\t5597\n2017-21-01 03:21:47\t3389\n2017-23-01 03:23:01\t5034\n2017-25-01 02:25:16\t866\n2017-26-01 02:26:21\t1909\n2017-27-01 02:27:54\t2393\n2017-30-01 02:30:07\t1001\n2017-31-01 02:31:15\t1913\n2017-32-01 02:32:31\t5386\n2017-33-01 02:33:41\t1185\n2017-34-01 02:34:23\t2435\n2017-36-01 02:36:29\t3855\n2017-39-01 02:39:02\t2875\n2017-41-01 02:41:28\t3099\n2017-41-01 02:41:59\t2288\n2017-43-01 02:43:28\t5230\n2017-44-01 02:44:45\t2037\n2017-46-01 02:46:00\t6065\n2017-47-01 02:47:12\t4441\n2017-48-01 02:48:39\t3340\n2017-50-01 02:50:45\t6740\n2017-51-01 02:51:57\t3705\n2017-53-01 02:53:33\t6000\n2017-54-01 02:54:17\t7618\n2017-55-01 02:55:38\t2002\n2017-57-01 02:57:23\t1329\n2017-59-01 02:59:11\t623\n2017-00-01 03:00:26\t2200\n2017-01-01 03:01:07\t5815\n2017-01-01 03:01:51\t673\n2017-02-01 03:02:42\t7078\n2017-04-01 03:04:56\t3462\n2017-05-01 03:05:44\t7526\n2017-06-01 03:06:53\t1111\n2017-08-01 03:08:25\t6691\n2017-09-01 03:09:25\t2659\n2017-11-01 03:11:24\t5270\n2017-12-01 03:12:15\t5035\n2017-12-01 03:12:32\t7778\n2017-13-01 03:13:47\t1647\n2017-15-01 03:15:36\t3352\n2017-15-01 03:15:54\t3034\n2017-17-01 03:17:43\t4770\n2017-19-01 03:19:17\t1936\n2017-21-01 03:21:01\t5842\n2017-22-01 03:22:03\t3488\n2017-23-01 03:23:17\t4114\n2017-23-01 03:23:32\t3080\n2017-24-01 03:24:32\t4830\n2017-24-01 03:24:54\t5032\n2017-25-01 03:25:53\t679\n2017-26-01 03:26:04\t1329\n2017-26-01 03:26:41\t3638\n2017-28-01 03:28:06\t8059\n2017-28-01 03:28:52\t5259\n2017-29-01 03:29:59\t8449\n2017-31-01 03:31:40\t5135\n2017-23-01 03:23:35\t6125\n2017-24-01 03:24:35\t3896\n2017-24-01 03:24:57\t4341\n2017-25-01 03:25:54\t5001\n2017-26-01 03:26:18\t4287\n2017-27-01 03:27:14\t1816\n2017-28-01 03:28:12\t2110\n2017-29-01 03:29:30\t6487\n2017-30-01 03:30:05\t8073\n2017-24-01 03:24:09\t897\n2017-24-01 03:24:35\t6368\n2017-25-01 03:25:05\t1774\n2017-26-01 03:26:02\t7034\n2017-26-01 03:26:23\t1384\n2017-27-01 03:27:17\t2931\n2017-28-01 03:28:19\t1843\n2017-29-01 03:29:39\t6388\n2017-30-01 03:30:31\t844\n2017-24-01 03:24:11\t8455\n2017-24-01 03:24:52\t8474\n2017-25-01 03:25:14\t7538\n2017-26-01 03:26:04\t8137\n2017-44-01 05:44:55\t3842\n2017-45-01 05:45:54\t8938\n2017-47-01 05:47:00\t4762\n2017-47-01 05:47:26\t3256\n2017-48-01 05:48:28\t1513\n2017-50-01 05:50:00\t5440\n2017-51-01 05:51:42\t5290\n2017-52-01 05:52:22\t1636\n2017-52-01 05:52:54\t4958\n2017-53-01 05:53:51\t4320\n2017-55-01 05:55:22\t1905\n2017-57-01 05:57:17\t1386\n2017-58-01 05:58:13\t7682\n2017-59-01 05:59:32\t1377\n2017-00-01 06:00:38\t2940\n2017-00-01 06:00:55\t7635\n2017-01-01 06:01:57\t531\n2017-02-01 06:02:38\t6134\n2017-04-01 06:04:11\t4809\n2017-06-01 06:06:21\t817\n2017-07-01 06:07:12\t6133\n2017-09-01 06:09:26\t550\n2017-10-01 06:10:36\t2288\n2017-12-01 06:12:23\t7849\n2017-14-01 06:14:01\t791\n2017-15-01 06:15:20\t1704\n2017-16-01 06:16:39\t2507\n2017-19-01 06:19:49\t4128\n2017-21-01 06:21:04\t5323\n2017-22-01 06:22:42\t6196\n2017-23-01 06:23:26\t5375\n2017-25-01 06:25:07\t3053\n2017-26-01 06:26:48\t2011\n2017-27-01 06:27:39\t2708\n2017-29-01 06:29:43\t5500\n2017-30-01 06:30:29\t525\n2017-30-01 06:30:53\t1308\n2017-32-01 06:32:48\t8287\n2017-34-01 06:34:19\t1663\n2017-35-01 06:35:27\t1173\n2017-37-01 06:37:18\t1088\n2017-38-01 06:38:15\t2994\n2017-38-01 06:38:51\t2762\n2017-39-01 06:39:31\t786\n2017-40-01 06:40:35\t1677\n2017-41-01 06:41:52\t1720\n2017-42-01 06:42:33\t5100\n2017-43-01 06:43:40\t6995\n2017-45-01 06:45:44\t2091\n2017-46-01 06:46:33\t2705\n2017-47-01 06:47:26\t1269\n2017-49-01 06:49:37\t1422\n2017-49-01 06:49:59\t6387\n2017-50-01 06:50:53\t1582\n2017-51-01 06:51:09\t4313\n2017-52-01 06:52:09\t4988\n2017-53-01 06:53:17\t4984\n2017-54-01 06:54:15\t5755\n2017-55-01 06:55:57\t3515\n2017-57-01 06:57:46\t4981\n2017-58-01 06:58:58\t6347\n2017-00-01 07:00:39\t1337\n2017-02-01 07:02:51\t1813\n2017-04-01 07:04:43\t1551\n2017-06-01 07:06:20\t3247\n2017-07-01 07:07:37\t8086\n2017-09-01 07:09:14\t4150\n2017-11-01 07:11:54\t3113\n2017-12-01 07:12:59\t2430\n2017-14-01 07:14:01\t3506\n2017-14-01 07:14:39\t3855\n2017-16-01 07:16:21\t5751\n2017-18-01 07:18:02\t4118\n2017-19-01 07:19:20\t741\n2017-21-01 07:21:05\t7492\n2017-22-01 07:22:59\t2076\n2017-25-01 07:25:12\t677\n2017-26-01 07:26:44\t1975\n2017-27-01 07:27:09\t6468\n2017-28-01 07:28:11\t2901\n2017-29-01 07:29:26\t9291\n2017-30-01 07:30:10\t6657\n2017-31-01 07:31:47\t4165\n2017-33-01 07:33:04\t4487\n2017-36-01 07:36:00\t4739\n2017-37-01 07:37:08\t3802\n2017-39-01 07:39:01\t6648\n2017-39-01 07:39:54\t4126\n2017-41-01 07:41:14\t8862\n2017-42-01 07:42:02\t3598\n2017-43-01 07:43:02\t1684\n2017-44-01 07:44:47\t6724\n2017-45-01 07:45:28\t2634\n2017-46-01 07:46:47\t1266\n2017-49-01 07:49:42\t5932\n2017-50-01 07:50:47\t2808\n2017-53-01 07:53:13\t3585\n2017-53-01 07:53:48\t1592\n2017-55-01 07:55:15\t6470\n2017-56-01 07:56:56\t6479\n2017-57-01 07:57:55\t7680\n2017-58-01 07:58:39\t1522\n2017-02-01 08:02:22\t2875\n2017-02-01 08:02:53\t3810\n2017-05-01 08:05:14\t1205\n2017-05-01 08:05:50\t4900\n2017-06-01 08:06:54\t7360\n2017-07-01 08:07:52\t5877\n2017-09-01 08:09:32\t5827\n2017-10-01 08:10:33\t3429\n2017-12-01 08:12:27\t5259\n2017-13-01 08:13:04\t879\n2017-13-01 08:13:40\t6884\n2017-14-01 08:14:11\t5664\n2017-15-01 08:15:35\t3319\n2017-16-01 08:16:59\t2410\n2017-17-01 08:17:06\t3406\n2017-18-01 08:18:36\t2520\n2017-19-01 08:19:49\t7863\n2017-21-01 08:21:05\t2618\n2017-21-01 08:21:42\t1532\n2017-23-01 08:23:09\t907\n2017-25-01 08:25:06\t7491\n2017-26-01 08:26:01\t2063\n2017-26-01 08:26:58\t1123\n2017-27-01 08:27:56\t4747\n2017-28-01 08:28:26\t1113\n2017-29-01 08:29:18\t9329\n2017-30-01 08:30:08\t5987\n2017-32-01 08:32:06\t731\n2017-34-01 08:34:05\t565\n2017-35-01 08:35:07\t1590\n2017-35-01 08:35:57\t894\n2017-36-01 08:36:33\t7480\n2017-38-01 08:38:13\t1845\n2017-39-01 08:39:17\t3242\n2017-40-01 08:40:50\t2663\n2017-41-01 08:41:53\t6800\n2017-43-01 08:43:51\t6036\n2017-46-01 08:46:06\t1648\n2017-47-01 08:47:29\t3691\n2017-47-01 08:47:55\t7445\n2017-49-01 08:49:59\t774\n2017-50-01 08:50:52\t1801\n2017-51-01 08:51:26\t6989\n2017-52-01 08:52:52\t1949\n2017-53-01 08:53:27\t931\n2017-54-01 08:54:16\t4683\n2017-54-01 08:54:51\t8943\n2017-56-01 08:56:51\t2868\n2017-58-01 08:58:48\t3706\n2017-00-01 09:00:21\t1532\n2017-00-01 09:00:46\t4582\n2017-01-01 09:01:28\t2496\n2017-02-01 09:02:46\t4268\n2017-03-01 09:03:39\t2218\n2017-04-01 09:04:46\t1624\n2017-05-01 09:05:39\t7043\n2017-06-01 09:06:38\t3278\n2017-08-01 09:08:23\t4266\n2017-09-01 09:09:55\t1306\n2017-11-01 09:11:41\t7935\n2017-12-01 09:12:23\t4512\n2017-14-01 09:14:19\t1744\n2017-15-01 09:15:08\t2065\n2017-16-01 09:16:38\t5119\n2017-20-01 09:20:10\t5147\n2017-20-01 09:20:52\t577\n2017-21-01 09:21:37\t3222\n2017-23-01 09:23:58\t4941\n2017-25-01 09:25:55\t1201\n2017-27-01 09:27:59\t2992\n2017-28-01 09:28:51\t5730\n2017-30-01 09:30:10\t1659\n2017-30-01 09:30:45\t3453\n2017-31-01 09:31:21\t8662\n2017-32-01 09:32:54\t2376\n2017-35-01 09:35:58\t3129\n2017-36-01 09:36:35\t2458\n2017-37-01 09:37:43\t8987\n2017-38-01 09:38:56\t4712\n2017-40-01 09:40:12\t8054\n2017-41-01 09:41:27\t5097\n2017-42-01 09:42:40\t906\n2017-43-01 09:43:52\t795\n2017-45-01 09:45:14\t3223\n2017-46-01 09:46:01\t2528\n2017-46-01 09:46:34\t3523\n2017-47-01 09:47:23\t2341\n2017-48-01 09:48:48\t2050\n2017-49-01 09:49:29\t6176\n2017-50-01 09:50:17\t857\n2017-51-01 09:51:51\t4608\n2017-53-01 09:53:00\t1466\n2017-54-01 09:54:02\t2937\n2017-54-01 09:54:52\t1304\n2017-55-01 09:55:35\t3698\n2017-57-01 09:57:31\t3295\n2017-58-01 09:58:46\t1984\n2017-00-01 10:00:30\t697\n2017-01-01 10:01:41\t7328\n2017-02-01 10:02:16\t5840\n2017-02-01 10:02:56\t2393\n2017-03-01 10:03:19\t5375\n2017-04-01 10:04:45\t8315\n2017-06-01 10:06:59\t2633\n2017-07-01 10:07:51\t5697\n2017-10-01 10:10:15\t922\n2017-11-01 10:11:30\t5359\n2017-14-01 10:14:31\t2143\n2017-15-01 10:15:25\t3803\n2017-16-01 10:16:29\t5930\n2017-16-01 10:16:59\t8113\n2017-18-01 10:18:04\t2100\n2017-19-01 10:19:02\t4280\n2017-19-01 10:19:45\t734\n2017-23-01 05:23:33\t1678\n2017-24-01 05:24:34\t4227\n2017-25-01 05:25:14\t848\n2017-27-01 05:27:53\t4548\n2017-29-01 05:29:08\t5568\n2017-30-01 05:30:29\t2420\n2017-31-01 05:31:12\t1593\n2017-32-01 05:32:42\t7366\n2017-33-01 05:33:50\t4811\n2017-34-01 05:34:27\t3797\n2017-35-01 05:35:29\t2483\n2017-36-01 05:36:30\t1000\n2017-38-01 05:38:26\t6487\n2017-39-01 05:39:31\t6506\n2017-40-01 05:40:58\t4350\n2017-42-01 05:42:52\t1941\n2017-44-01 05:44:14\t2267\n2017-44-01 05:44:35\t3427\n2017-45-01 05:45:46\t6139\n2017-46-01 05:46:54\t2812\n2017-47-01 05:47:23\t853\n2017-47-01 05:47:53\t4338\n2017-49-01 05:49:42\t5898\n2017-51-01 05:51:01\t815\n2017-52-01 05:52:22\t3741\n2017-52-01 05:52:34\t1162\n2017-53-01 05:53:34\t3451\n2017-55-01 05:55:15\t5395\n2017-57-01 05:57:15\t7018\n2017-58-01 05:58:12\t3533\n2017-59-01 05:59:18\t870\n2017-00-01 06:00:30\t4481\n2017-00-01 06:00:52\t1627\n2017-01-01 06:01:56\t3616\n2017-02-01 06:02:16\t572\n2017-02-01 06:02:48\t792\n2017-06-01 06:06:03\t1888\n2017-06-01 06:06:51\t1150\n2017-09-01 06:09:13\t5486\n2017-10-01 06:10:36\t4801\n2017-12-01 06:12:11\t1771\n2017-13-01 06:13:23\t887\n2017-15-01 06:15:16\t2748\n2017-16-01 06:16:12\t2750\n2017-18-01 06:18:30\t6276\n2017-20-01 06:20:50\t5042\n2017-22-01 06:22:17\t2102\n2017-23-01 06:23:00\t1044\n2017-24-01 06:24:52\t5198\n2017-26-01 06:26:43\t5589\n2017-27-01 06:27:23\t4996\n2017-29-01 06:29:31\t1701\n2017-30-01 06:30:07\t4026\n2017-30-01 06:30:42\t3691\n2017-32-01 06:32:14\t3322\n2017-34-01 06:34:06\t5590\n2017-35-01 06:35:22\t1817\n2017-37-01 06:37:14\t926\n2017-37-01 06:37:44\t4031\n2017-38-01 06:38:26\t4858\n2017-39-01 06:39:29\t2959\n2017-40-01 06:40:26\t4410\n2017-41-01 06:41:48\t633\n2017-42-01 06:42:28\t2395\n2017-43-01 06:43:37\t6050\n2017-45-01 06:45:19\t2478\n2017-46-01 06:46:29\t4475\n2017-47-01 06:47:25\t2665\n2017-49-01 06:49:00\t2926\n2017-49-01 06:49:48\t6355\n2017-50-01 06:50:41\t2138\n2017-51-01 06:51:07\t4461\n2017-51-01 06:51:50\t8217\n2017-53-01 06:53:03\t2132\n2017-54-01 06:54:12\t3614\n2017-55-01 06:55:22\t1804\n2017-57-01 06:57:34\t3071\n2017-58-01 06:58:55\t1702\n2017-59-01 06:59:59\t1998\n2017-02-01 07:02:19\t2438\n2017-04-01 07:04:30\t6441\n2017-05-01 07:05:59\t4941\n2017-07-01 07:07:35\t3358\n2017-08-01 07:08:49\t2488\n2017-11-01 07:11:33\t6841\n2017-12-01 07:12:58\t2148\n2017-13-01 07:13:08\t2352\n2017-14-01 07:14:30\t1698\n2017-16-01 07:16:08\t6280\n2017-17-01 07:17:42\t1320\n2017-19-01 07:19:20\t2766\n2017-21-01 07:21:02\t9435\n2017-22-01 07:22:37\t5607\n2017-24-01 07:24:33\t4900\n2017-26-01 07:26:16\t1791\n2017-26-01 07:26:51\t2188\n2017-28-01 07:28:06\t3489\n2017-28-01 07:28:49\t783\n2017-29-01 07:29:58\t4722\n2017-31-01 07:31:22\t3681\n2017-32-01 07:32:46\t2883\n2017-35-01 07:35:42\t5401\n2017-36-01 07:36:40\t725\n2017-38-01 07:38:43\t1512\n2017-39-01 07:39:31\t3868\n2017-41-01 07:41:06\t7990\n2017-41-01 07:41:30\t3287\n2017-42-01 07:42:46\t6830\n2017-43-01 07:43:51\t7769\n2017-45-01 07:45:22\t6274\n2017-46-01 07:46:08\t7532\n2017-49-01 07:49:08\t5299\n2017-50-01 07:50:32\t6984\n2017-52-01 07:52:09\t6074\n2017-53-01 07:53:31\t2497\n2017-54-01 07:54:45\t3612\n2017-56-01 07:56:54\t1402\n2017-57-01 07:57:34\t4367\n2017-58-01 07:58:38\t6680\n2017-00-01 08:00:35\t3003\n2017-02-01 08:02:40\t5187\n2017-03-01 08:03:30\t2892\n2017-05-01 08:05:47\t4157\n2017-06-01 08:06:19\t2025\n2017-07-01 08:07:42\t756\n2017-08-01 08:08:49\t6955\n2017-10-01 08:10:26\t934\n2017-11-01 08:11:25\t2748\n2017-12-01 08:12:48\t2901\n2017-13-01 08:13:39\t2507\n2017-14-01 08:14:06\t7548\n2017-14-01 08:14:59\t2097\n2017-16-01 08:16:40\t3372\n2017-17-01 08:17:01\t579\n2017-18-01 08:18:11\t697\n2017-19-01 08:19:40\t6236\n2017-20-01 08:20:53\t2646\n2017-21-01 08:21:32\t5955\n2017-23-01 08:23:06\t938\n2017-24-01 08:24:29\t4249\n2017-25-01 08:25:26\t5821\n2017-26-01 08:26:38\t2859\n2017-27-01 08:27:48\t679\n2017-28-01 08:28:23\t1084\n<!--TABLE_COMMENT-->\n<font color=red>Results are limited by 1000.</font>"}]},"apps":[],"jobName":"paragraph_1505337712548_-1285408012","id":"20161220-085645_357172906","dateCreated":"2017-09-13T14:21:52-0700","dateStarted":"2017-09-15T14:33:40-0700","dateFinished":"2017-09-15T14:33:40-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27146"},{"title":"Load Data from MapR-DB as a Spark RDD","text":"import com.fasterxml.jackson.annotation.{JsonIgnoreProperties, JsonProperty}\nimport org.apache.spark.{SparkConf, SparkContext}\nimport com.mapr.db.spark._\nimport spark.implicits._\nimport org.apache.spark.sql.functions._\nimport com.mapr.db.spark.impl.OJAIDocument\n","user":"anonymous","dateUpdated":"2017-09-15T14:11:55-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport com.fasterxml.jackson.annotation.{JsonIgnoreProperties, JsonProperty}\n\nimport org.apache.spark.{SparkConf, SparkContext}\n\nimport com.mapr.db.spark._\n\nimport spark.implicits._\n\nimport org.apache.spark.sql.functions._\n\nimport com.mapr.db.spark.impl.OJAIDocument\n"}]},"apps":[],"jobName":"paragraph_1505415842842_-882065714","id":"20170914-120402_1029431501","dateCreated":"2017-09-14T12:04:02-0700","dateStarted":"2017-09-15T14:11:55-0700","dateFinished":"2017-09-15T14:11:56-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27147"},{"title":"Load Data from MapR-DB as a Spark RDD","text":"// MapR-DB table returned as an RDD where each row is a JSON document\nval rdd = sc.loadFromMapRDB(\"/mapr/my.cluster.com/tmp/crm_data\").select(\"name\", \"address\", \"first_visit\", \"zip\", \"sentiment\", \"persona\", \"churn_risk\");\nprintln(\"Number of records loaded from MapR-DB: \" + rdd.count)\nval stringrdd = rdd.map(x => x.getDoc.asJsonString())\nval crm_df = sqlContext.read.json(stringrdd)\n// add a user_id to this dataframe to make it easier to join with the clickstream\ncrm_df.withColumn(\"user_id\",monotonicallyIncreasingId).createOrReplaceTempView(\"crm_table\")\ncrm_df.show(5)\n\n\n","user":"anonymous","dateUpdated":"2017-09-15T14:45:49-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":false},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\nrdd: com.mapr.db.spark.RDD.MapRDBTableScanRDD[com.mapr.db.spark.impl.OJAIDocument] = MapRDBTableScanRDD[116] at RDD at MapRDBBaseRDD.scala:17\nNumber of records loaded from MapR-DB: 100000\n\nstringrdd: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[117] at map at <console>:81\n\ncrm_df: org.apache.spark.sql.DataFrame = [_id: string, address: string ... 6 more fields]\n\n\n\n<console>:2: error: identifier expected but string literal found.\ncrm_df[\"churn_label\"] = crm_df[\"churn_risk\"] > 20\n       ^\n"}]},"apps":[],"jobName":"paragraph_1505405617175_1961057998","id":"20170914-091337_1451510797","dateCreated":"2017-09-14T09:13:37-0700","dateStarted":"2017-09-15T14:43:51-0700","dateFinished":"2017-09-15T14:43:54-0700","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:27148"},{"text":"spark.sql(\"select * from weblog_snapshot limit 2\").show\nspark.sql(\"select * from crm_table limit 2\").show","user":"anonymous","dateUpdated":"2017-09-15T16:10:53-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-------------------+----+-------+----------------+--------------------+--------------------+\n|user_id|           datetime|  os|browser|response_time_ms|             product|                 url|\n+-------+-------------------+----+-------+----------------+--------------------+--------------------+\n|  63453|2017-00-01 12:00:00|win7|Firefox|            5263|automobile_insurance|https://ad.double...|\n|  70446|2017-01-01 12:01:33| Mac| Mobile|            3023|business_credit_card|https://static.ch...|\n+-------+-------------------+----+-------+----------------+--------------------+--------------------+\n\n+--------------------+--------------------+----------+-----------+-----------------+-------+---------+-----+-------+\n|                 _id|             address|churn_risk|first_visit|             name|persona|sentiment|  zip|user_id|\n+--------------------+--------------------+----------+-----------+-----------------+-------+---------+-----+-------+\n|000022e6-163d-4b2...|48578 Sandy Maple...|         6| 07/15/2012|     Eva Peterson|      3| POSITIVE|71410|      0|\n|00003d07-ee73-4fa...| 64 Pretty Rock Dell|         2| 10/26/2003|Richard Escalante|      2|  NEUTRAL|41101|      1|\n+--------------------+--------------------+----------+-----------+-----------------+-------+---------+-----+-------+\n\n"}]},"apps":[],"jobName":"paragraph_1505407554377_913697039","id":"20170914-094554_925584909","dateCreated":"2017-09-14T09:45:54-0700","dateStarted":"2017-09-15T14:57:08-0700","dateFinished":"2017-09-15T14:57:09-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27149"},{"title":"Range of Churn Scores recorded in CRM database (higher means more likely to churn)","text":"%sql\nSELECT count(user_id), churn_risk from crm_table group by churn_risk","user":"anonymous","dateUpdated":"2017-09-15T14:27:49-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"setting":{"pieChart":{}},"commonSetting":{},"keys":[{"name":"churn_risk","index":1,"aggr":"sum"}],"groups":[],"values":[{"name":"count(user_id)","index":0,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"count(user_id)\tchurn_risk\n360\t29\n535\t26\n1346\t19\n7\t54\n955\t22\n5501\t7\n153\t34\n13\t50\n5\t57\n202\t32\n45\t43\n279\t31\n70\t39\n639\t25\n6255\t6\n1\t72\n3\t58\n4571\t9\n471\t27\n14\t51\n2\t56\n4\t52\n1750\t17\n47\t41\n445\t28\n218\t33\n6967\t5\n10699\t1\n4096\t10\n12\t48\n27\t44\n2\t61\n8677\t3\n103\t37\n3266\t12\n4\t55\n5219\t8\n3\t62\n3597\t11\n8\t49\n168\t35\n9663\t2\n7846\t4\n2899\t13\n140\t36\n1552\t18\n2517\t14\n1065\t21\n2\t59\n2235\t15\n87\t38\n308\t30\n51\t42\n824\t23\n30\t46\n1196\t20\n75\t40\n2014\t16\n26\t45\n17\t47\n8\t53\n706\t24\n"}]},"apps":[],"jobName":"paragraph_1505510474599_994997404","id":"20170915-142114_2112794512","dateCreated":"2017-09-15T14:21:14-0700","dateStarted":"2017-09-15T14:25:06-0700","dateFinished":"2017-09-15T14:25:08-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27150"},{"title":"Count number customers grouped by churn","text":"val train_df = crm_df.withColumn(\"churn_label\", expr(\"case when churn_risk >= 20 then 1 else 0 end\"))\ntrain_df.groupBy(\"churn_label\").count.show","user":"anonymous","dateUpdated":"2017-09-15T15:53:30-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ntrain_df: org.apache.spark.sql.DataFrame = [_id: string, address: string ... 7 more fields]\n+-----------+-----+\n|churn_label|count|\n+-----------+-----+\n|          1| 9330|\n|          0|90670|\n+-----------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1505515927467_-1557662716","id":"20170915-155207_1848755720","dateCreated":"2017-09-15T15:52:07-0700","dateStarted":"2017-09-15T15:53:30-0700","dateFinished":"2017-09-15T15:53:32-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27151"},{"title":"View the proportion of high / low churn scores","text":"%sql\n select count(churn_risk), case when churn_risk >= 20 then \"high risk\" else \"low risk\" end as churn_label from crm_table group by churn_risk\n","user":"anonymous","dateUpdated":"2017-09-15T15:53:34-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"pieChart","height":300,"optionOpen":false,"setting":{"pieChart":{}},"commonSetting":{},"keys":[{"name":"churn_label","index":1,"aggr":"sum"}],"groups":[],"values":[{"name":"count(churn_risk)","index":0,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"count(churn_risk)\tchurn_label\n360\thigh risk\n535\thigh risk\n1346\tlow risk\n7\thigh risk\n955\thigh risk\n5501\tlow risk\n153\thigh risk\n13\thigh risk\n5\thigh risk\n202\thigh risk\n45\thigh risk\n279\thigh risk\n70\thigh risk\n639\thigh risk\n6255\tlow risk\n1\thigh risk\n3\thigh risk\n4571\tlow risk\n471\thigh risk\n14\thigh risk\n2\thigh risk\n4\thigh risk\n1750\tlow risk\n47\thigh risk\n445\thigh risk\n218\thigh risk\n6967\tlow risk\n10699\tlow risk\n4096\tlow risk\n12\thigh risk\n27\thigh risk\n2\thigh risk\n8677\tlow risk\n103\thigh risk\n3266\tlow risk\n4\thigh risk\n5219\tlow risk\n3\thigh risk\n3597\tlow risk\n8\thigh risk\n168\thigh risk\n9663\tlow risk\n7846\tlow risk\n2899\tlow risk\n140\thigh risk\n1552\tlow risk\n2517\tlow risk\n1065\thigh risk\n2\thigh risk\n2235\tlow risk\n87\thigh risk\n308\thigh risk\n51\thigh risk\n824\thigh risk\n30\thigh risk\n1196\thigh risk\n75\thigh risk\n2014\tlow risk\n26\thigh risk\n17\thigh risk\n8\thigh risk\n706\thigh risk\n"}]},"apps":[],"jobName":"paragraph_1505512693475_242352458","id":"20170915-145813_591229382","dateCreated":"2017-09-15T14:58:13-0700","dateStarted":"2017-09-15T15:53:34-0700","dateFinished":"2017-09-15T15:53:36-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27152"},{"title":"Count number customers grouped by churn","text":"val train_df = crm_df.withColumn(\"churn_label\", expr(\"case when churn_risk >= 20 then 1 else 0 end\"))\ntrain_df.groupBy(\"churn_label\").count.show","user":"anonymous","dateUpdated":"2017-09-15T15:59:39-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ntrain_df: org.apache.spark.sql.DataFrame = [_id: string, address: string ... 7 more fields]\n+-----------+-----+\n|churn_label|count|\n+-----------+-----+\n|          1| 9330|\n|          0|90670|\n+-----------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1505515587386_-1689137926","id":"20170915-154627_252024536","dateCreated":"2017-09-15T15:46:27-0700","dateStarted":"2017-09-15T15:51:50-0700","dateFinished":"2017-09-15T15:51:52-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27153"},{"title":"JOIN datasets loaded from MapR-DB and MapR Streams","text":"\nval joinedDF = spark.sql(\"SELECT weblog_snapshot.datetime, weblog_snapshot.os, weblog_snapshot.browser, weblog_snapshot.response_time_ms,weblog_snapshot.product,weblog_snapshot.url, crm_table.*, case when crm_table.churn_risk >= 20 then 1 else 0 end as churn_label from weblog_snapshot JOIN crm_table ON weblog_snapshot.user_id == crm_table.user_id\")\njoinedDF.count()\njoinedDF.show(2)","user":"anonymous","dateUpdated":"2017-09-15T17:04:26-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\njoinedDF: org.apache.spark.sql.DataFrame = [datetime: string, os: string ... 14 more fields]\n\nres267: Long = 10000\n+-------------------+----+-------+----------------+--------------------+--------------------+--------------------+--------------------+----------+-----------+--------------+-------+---------+-----+-------+-----------+\n|           datetime|  os|browser|response_time_ms|             product|                 url|                 _id|             address|churn_risk|first_visit|          name|persona|sentiment|  zip|user_id|churn_label|\n+-------------------+----+-------+----------------+--------------------+--------------------+--------------------+--------------------+----------+-----------+--------------+-------+---------+-----+-------+-----------+\n|2017-59-01 04:59:36|win7| Mobile|            7122|automobile_insurance|https://stags.blu...|001c8046-44a6-4bc...|29753 Pied Pebble...|         4| 04/10/2006|    Ruben Lord|      1|  NEUTRAL|33738|     26|          0|\n|2017-14-01 02:14:22|win8|Firefox|            1785|personal_credit_card|https://s.xp1.ru4...|001d3bcd-460f-4d9...|7810 Stony Forest...|         1| 11/12/1997|Jeromy Endsley|      1| POSITIVE|37345|     29|          0|\n+-------------------+----+-------+----------------+--------------------+--------------------+--------------------+--------------------+----------+-----------+--------------+-------+---------+-----+-------+-----------+\nonly showing top 2 rows\n\n"}]},"apps":[],"jobName":"paragraph_1505449930735_951892960","id":"20170914-213210_1580401051","dateCreated":"2017-09-14T21:32:10-0700","dateStarted":"2017-09-15T17:04:26-0700","dateFinished":"2017-09-15T17:04:31-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27154"},{"title":"Down sample training data for faster model building","text":"val fractions = Map(0 -> .01, 1 -> 0.1)\n// keep only 1/10 of Churn=Likely (1) class and keep only 1/100 of the Churn=Unlikely (0) class\nval strain = joinedDF.stat.sampleBy(\"churn_label\", fractions, 36L)\nstrain.groupBy(\"churn_label\").count.show\nstrain.show(2)","user":"anonymous","dateUpdated":"2017-09-15T17:04:36-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfractions: scala.collection.immutable.Map[Int,Double] = Map(0 -> 0.01, 1 -> 0.1)\n\nstrain: org.apache.spark.sql.DataFrame = [datetime: string, os: string ... 14 more fields]\n+-----------+-----+\n|churn_label|count|\n+-----------+-----+\n|          1|   79|\n|          0|   89|\n+-----------+-----+\n\n+-------------------+----+-------+----------------+--------------------+--------------------+--------------------+--------------------+----------+-----------+--------------+-------+---------+-----+-------+-----------+\n|           datetime|  os|browser|response_time_ms|             product|                 url|                 _id|             address|churn_risk|first_visit|          name|persona|sentiment|  zip|user_id|churn_label|\n+-------------------+----+-------+----------------+--------------------+--------------------+--------------------+--------------------+----------+-----------+--------------+-------+---------+-----+-------+-----------+\n|2017-04-02 04:04:23|win7|     IE|            1218|personal_credit_card|https://rf15.chas...|83df9398-b730-476...|2400 Grand Creek ...|         9| 05/12/1997|Kelly Guerrero|      2| NEGATIVE|12181|  51547|          0|\n|2017-35-01 05:35:46|win7| Chrome|            8251|      home_insurance|https://static.ch...|f39ebd8e-427d-475...|3555 Burning Cott...|        24| 08/06/2002|Vincenzo Moore|      2|  NEUTRAL|78023|  95090|          1|\n+-------------------+----+-------+----------------+--------------------+--------------------+--------------------+--------------------+----------+-----------+--------------+-------+---------+-----+-------+-----------+\nonly showing top 2 rows\n\n"}]},"apps":[],"jobName":"paragraph_1505515875836_-437719965","id":"20170915-155115_2053625306","dateCreated":"2017-09-15T15:51:15-0700","dateStarted":"2017-09-15T17:04:36-0700","dateFinished":"2017-09-15T17:04:42-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27155"},{"title":"","text":"%md # Churn Prediction with Spark ML\nHere we will be predicting the propensity of customer churn with the clickstrem / CMS datasets that we loaded above from MapR-DB and MapR Streams","user":"anonymous","dateUpdated":"2017-09-15T13:53:44-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false,"title":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Churn Prediction with Spark ML</h1>\n<p>Here we will be predicting the propensity of customer churn with the clickstrem / CMS datasets that we loaded above from MapR-DB and MapR Streams</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1505446538540_-1361630583","id":"20170914-203538_1273048701","dateCreated":"2017-09-14T20:35:38-0700","dateStarted":"2017-09-15T13:53:44-0700","dateFinished":"2017-09-15T13:53:44-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27156"},{"title":"","text":"%md In order for the features to be used by a machine learning algorithm, they are transformed into numbers representing the value for each feature\n","user":"anonymous","dateUpdated":"2017-09-15T13:54:10-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","title":false,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In order for the features to be used by a machine learning algorithm, they are transformed into numbers representing the value for each feature</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1505508403298_-668997784","id":"20170915-134643_1727339387","dateCreated":"2017-09-15T13:46:43-0700","dateStarted":"2017-09-15T13:54:10-0700","dateFinished":"2017-09-15T13:54:10-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27157"},{"title":"Import Spark ML packages","text":"import org.apache.spark._\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.Dataset\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\nimport org.apache.spark.ml.classification.DecisionTreeClassificationModel\nimport org.apache.spark.mllib.evaluation.BinaryClassificationMetrics\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.tuning.ParamGridBuilder\nimport org.apache.spark.ml.tuning.CrossValidator\nimport org.apache.spark.ml.tuning.CrossValidatorModel\nimport org.apache.spark.ml.feature.VectorAssembler","user":"anonymous","dateUpdated":"2017-09-15T14:13:32-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","title":true,"editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark._\n\nimport org.apache.spark.sql.SparkSession\n\nimport org.apache.spark.sql.functions._\n\nimport org.apache.spark.sql.types._\n\nimport org.apache.spark.sql._\n\nimport org.apache.spark.sql.Dataset\n\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\n\nimport org.apache.spark.ml.classification.DecisionTreeClassificationModel\n\nimport org.apache.spark.mllib.evaluation.BinaryClassificationMetrics\n\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\nimport org.apache.spark.ml.feature.StringIndexer\n\nimport org.apache.spark.ml.tuning.ParamGridBuilder\n\nimport org.apache.spark.ml.tuning.CrossValidator\n\nimport org.apache.spark.ml.tuning.CrossValidatorModel\n\nimport org.apache.spark.ml.feature.VectorAssembler\n"}]},"apps":[],"jobName":"paragraph_1505509986339_1719006178","id":"20170915-141306_273212674","dateCreated":"2017-09-15T14:13:06-0700","dateStarted":"2017-09-15T14:13:24-0700","dateFinished":"2017-09-15T14:13:25-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27158"},{"title":"Map URLs, Browser, OS, and Product topics from the clickstream to numbers","text":"val urlindexer = new StringIndexer()\n    .setInputCol(\"url\")\n    .setOutputCol(\"url_int\")\nval productindexer = new StringIndexer()\n    .setInputCol(\"product\")\n    .setOutputCol(\"product_int\")\nval browserindexer = new StringIndexer()\n    .setInputCol(\"browser\")\n    .setOutputCol(\"browser_int\")\nval osindexer = new StringIndexer()\n    .setInputCol(\"os\")\n    .setOutputCol(\"os_int\")\nval sentimentindexer = new StringIndexer()\n    .setInputCol(\"sentiment\")\n    .setOutputCol(\"sentiment_int\")\nval labelindexer = new StringIndexer()\n      .setInputCol(\"churn_label\")\n      .setOutputCol(\"label\")","user":"anonymous","dateUpdated":"2017-09-15T16:22:02-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","title":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nurlindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_7a92ba51d604\n\nproductindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_990a08df46cf\n\nbrowserindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_d62bbc1d7172\n\nosindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_6d678c59995a\n\nsentimentindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_545fcbeea2f0\n\nlabelindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_bb283458900a\n"}]},"apps":[],"jobName":"paragraph_1505508850400_-295783129","id":"20170915-135410_464247701","dateCreated":"2017-09-15T13:54:10-0700","dateStarted":"2017-09-15T16:22:02-0700","dateFinished":"2017-09-15T16:22:03-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27159"},{"title":"Put features into a feature vector column","text":"//val featureCols = Array(\"url_int\", \"product_int\", \"browser_int\", \"os_int\", \"churn_risk\", \"persona\", \"sentiment_int\")\n\nval featureCols = Array(\"churn_risk\", \"persona\")\nval assembler = new VectorAssembler()\n      .setInputCols(featureCols)\n      .setOutputCol(\"features\")","user":"anonymous","dateUpdated":"2017-09-15T16:49:42-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfeatureCols: Array[String] = Array(churn_risk, persona)\n\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_04d6e142a314\n"}]},"apps":[],"jobName":"paragraph_1505509056623_1434739159","id":"20170915-135736_572118930","dateCreated":"2017-09-15T13:57:36-0700","dateStarted":"2017-09-15T16:49:42-0700","dateFinished":"2017-09-15T16:49:42-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27160"},{"title":"Create Decision Tree Estimator then set the Label and Feature Columns ","text":"val dTree = new DecisionTreeClassifier().setLabelCol(\"churn_label\")\n      .setFeaturesCol(\"features\")","user":"anonymous","dateUpdated":"2017-09-15T16:52:25-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndTree: org.apache.spark.ml.classification.DecisionTreeClassifier = dtc_c02c2188bbbb\n"}]},"apps":[],"jobName":"paragraph_1505509582563_1041861270","id":"20170915-140622_1896068921","dateCreated":"2017-09-15T14:06:22-0700","dateStarted":"2017-09-15T16:52:25-0700","dateFinished":"2017-09-15T16:52:25-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27161"},{"title":"Set up pipeline with  feature transformers and model estimator","text":"// put treeClassifier in a Pipeline.\n val pipeline = new Pipeline()\n       .setStages(Array(assembler, dTree))\n//      .setStages(Array(productindexer, browserindexer, osindexer, sentimentindexer, labelindexer, assembler, dTree))","user":"anonymous","dateUpdated":"2017-09-15T16:52:28-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\npipeline: org.apache.spark.ml.Pipeline = pipeline_615f45e50d5f\n"}]},"apps":[],"jobName":"paragraph_1505509581232_1761726462","id":"20170915-140621_405125848","dateCreated":"2017-09-15T14:06:21-0700","dateStarted":"2017-09-15T16:52:28-0700","dateFinished":"2017-09-15T16:52:28-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27162"},{"title":"Drop columns that we will not use for machine learning ","text":"val ntrain = strain.drop(\"address\").drop(\"first_visit\").drop(\"name\").drop(\"_id\").drop(\"datetime\").drop(\"user_id\").drop(\"zip\").drop(\"response_time_ms\").drop(\"url\").drop(\"os\").drop(\"browser\").drop(\"product\").drop(\"sentiment\")\nprintln(ntrain.count)\nntrain.show(2)\nntrain.cache\nntrain.printSchema()","user":"anonymous","dateUpdated":"2017-09-15T16:51:18-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nntrain: org.apache.spark.sql.DataFrame = [churn_risk: bigint, persona: bigint ... 1 more field]\n168\n+----------+-------+-----------+\n|churn_risk|persona|churn_label|\n+----------+-------+-----------+\n|         9|      2|          0|\n|        24|      2|          1|\n+----------+-------+-----------+\nonly showing top 2 rows\n\n\nres224: ntrain.type = [churn_risk: bigint, persona: bigint ... 1 more field]\nroot\n |-- churn_risk: long (nullable = true)\n |-- persona: long (nullable = true)\n |-- churn_label: integer (nullable = false)\n\n"}]},"apps":[],"jobName":"paragraph_1505516882559_166547582","id":"20170915-160802_331544115","dateCreated":"2017-09-15T16:08:02-0700","dateStarted":"2017-09-15T16:51:18-0700","dateFinished":"2017-09-15T16:51:20-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27163"},{"text":"%md ### Spark ML K-Fold Algorithm Summary:\r\nSpark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.\r\n","user":"anonymous","dateUpdated":"2017-09-15T16:44:39-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Spark ML K-Fold Algorithm Summary:</h3>\n<p>Spark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1505517171644_1903514843","id":"20170915-161251_462296975","dateCreated":"2017-09-15T16:12:51-0700","dateStarted":"2017-09-15T16:44:39-0700","dateFinished":"2017-09-15T16:44:39-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27164"},{"title":"set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection","text":"// set param grid to Search through decision tree's maxDepth parameter for best model\n// Deeper trees are potentially more accurate, but are also more likely to overfit.\n val paramGrid = new ParamGridBuilder().addGrid(dTree.maxDepth, Array( 4, 5, 6)).build()\n val evaluator = new BinaryClassificationEvaluator()\n      .setLabelCol(\"churn_label\")\n      .setRawPredictionCol(\"prediction\")\n\n// Set up 3-fold cross validation with paramGrid\n val crossval = new CrossValidator().setEstimator(pipeline)\n      .setEvaluator(evaluator)\n      .setEstimatorParamMaps(paramGrid).setNumFolds(3)\n\n\n","user":"anonymous","dateUpdated":"2017-09-15T16:52:34-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","title":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n\n\n\n\n\n\n\nparamGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tdtc_c02c2188bbbb-maxDepth: 4\n}, {\n\tdtc_c02c2188bbbb-maxDepth: 5\n}, {\n\tdtc_c02c2188bbbb-maxDepth: 6\n})\n\nevaluator: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_217a84da4e71\n\ncrossval: org.apache.spark.ml.tuning.CrossValidator = cv_8d8af7525ecd\n"}]},"apps":[],"jobName":"paragraph_1505517236154_168974856","id":"20170915-161356_533566655","dateCreated":"2017-09-15T16:13:56-0700","dateStarted":"2017-09-15T16:52:34-0700","dateFinished":"2017-09-15T16:52:34-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27165"},{"title":"Fit the model to the input data using K-fold cross validation","text":"val cvModel = crossval.fit(ntrain)","user":"anonymous","dateUpdated":"2017-09-15T16:52:36-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ncvModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_8d8af7525ecd\n"}]},"apps":[],"jobName":"paragraph_1505509630916_-186580671","id":"20170915-140710_637112463","dateCreated":"2017-09-15T14:07:10-0700","dateStarted":"2017-09-15T16:52:36-0700","dateFinished":"2017-09-15T16:53:53-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27166"},{"title":"save / load the model","text":"cvModel.write.overwrite().save(\"/tmp/churn_prediction_model\")\nval sameCVModel = CrossValidatorModel.load(\"/tmp/churn_prediction_model\")","user":"anonymous","dateUpdated":"2017-09-15T17:06:48-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nsameCVModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_8d8af7525ecd\n"}]},"apps":[],"jobName":"paragraph_1505520313764_-2084251344","id":"20170915-170513_1693217540","dateCreated":"2017-09-15T17:05:13-0700","dateStarted":"2017-09-15T17:06:48-0700","dateFinished":"2017-09-15T17:06:51-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27167"},{"title":"Get Churn Predictions","text":"sameCVModel.transform(joinedDF).select(\"user_id\", \"prediction\").show(2)\n\n","user":"anonymous","dateUpdated":"2017-09-15T17:07:16-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+----------+\n|user_id|prediction|\n+-------+----------+\n|     26|       0.0|\n|     29|       0.0|\n+-------+----------+\nonly showing top 2 rows\n\n"}]},"apps":[],"jobName":"paragraph_1505509763954_-561509990","id":"20170915-140923_1740758262","dateCreated":"2017-09-15T14:09:23-0700","dateStarted":"2017-09-15T17:07:16-0700","dateFinished":"2017-09-15T17:07:18-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:27168"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1505509752553_-1725406061","id":"20170915-140912_1553824334","dateCreated":"2017-09-15T14:09:12-0700","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:27169"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1505509758024_-1209827211","id":"20170915-140918_835527647","dateCreated":"2017-09-15T14:09:18-0700","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:27170"}],"name":"Churn Predict on Clickstream","id":"2CUQBCMWJ","angularObjects":{"2CTJ612MA:shared_process":[],"2CSSF2TSA:shared_process":[],"2CTV8579E:shared_process":[],"2CT61WH1H:shared_process":[],"2CR1GS1SU:shared_process":[],"2CSS5NKC3:shared_process":[],"2CSN2T9YW:shared_process":[],"2CTNAY1B6:shared_process":[],"2CUF3XRMG:shared_process":[],"2CRN6B13X:shared_process":[],"2CSGC5REF:shared_process":[],"2CRP8PR6Z:shared_process":[],"2CREDPWY9:shared_process":[],"2CQSHATVV:shared_process":[],"2CT8Y5X61:shared_process":[],"2CU4B4UXF:shared_process":[],"2CQT4K7YB:shared_process":[],"2CSRE32HD:shared_process":[],"2CR5HE1EK:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}